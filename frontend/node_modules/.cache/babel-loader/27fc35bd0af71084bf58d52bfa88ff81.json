{"ast":null,"code":"import axios from 'axios';\nimport { GET_ORDERS_SUCCESS, GET_ORDERS_FAIL, GET_ORDER_DETAIL_SUCCESS, GET_ORDER_DETAIL_FAIL } from './types';\nexport const list_orders = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/order/get-orders`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: GET_ORDERS_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_ORDERS_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: GET_ORDERS_FAIL\n      });\n    }\n  }\n};\nexport const get_order_detail = transactionId => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/order/get-order/${transactionId}`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: GET_ORDER_DETAIL_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_ORDER_DETAIL_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: GET_ORDER_DETAIL_FAIL\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/orders.js"],"names":["axios","GET_ORDERS_SUCCESS","GET_ORDERS_FAIL","GET_ORDER_DETAIL_SUCCESS","GET_ORDER_DETAIL_FAIL","list_orders","dispatch","localStorage","getItem","config","headers","res","get","process","env","REACT_APP_API_URL","status","type","payload","data","err","get_order_detail","transactionId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,kBADJ,EAEIC,eAFJ,EAGIC,wBAHJ,EAIIC,qBAJJ,QAKO,SALP;AAOA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC/C,MAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AAChC,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,yBAAkB,OAAMH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B;AAFlD;AADE,KAAf;;AAOA,QAAI;AACA,YAAMG,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,uBAA3C,EAAmEN,MAAnE,CAAlB;;AAEA,UAAIE,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACpBV,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAEhB,kBADD;AAELiB,UAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFR,SAAD,CAAR;AAIH,OALD,MAKO;AACHb,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAEf;AADD,SAAD,CAAR;AAGH;AACJ,KAbD,CAaE,OAAMkB,GAAN,EAAW;AACTd,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAEf;AADD,OAAD,CAAR;AAGH;AACJ;AACJ,CA5BM;AA+BP,OAAO,MAAMmB,gBAAgB,GAAGC,aAAa,IAAI,MAAMhB,QAAN,IAAkB;AAC/D,MAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AAChC,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,yBAAkB,OAAMH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B;AAFlD;AADE,KAAf;;AAOA,QAAI;AACA,YAAMG,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,wBAAuBO,aAAc,EAAhF,EAAmFb,MAAnF,CAAlB;;AAEA,UAAIE,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACpBV,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAEd,wBADD;AAELe,UAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFR,SAAD,CAAR;AAIH,OALD,MAKO;AACHb,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAEb;AADD,SAAD,CAAR;AAGH;AACJ,KAbD,CAaE,OAAMgB,GAAN,EAAW;AACTd,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAEb;AADD,OAAD,CAAR;AAGH;AACJ;AACJ,CA5BM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    GET_ORDERS_SUCCESS,\r\n    GET_ORDERS_FAIL,\r\n    GET_ORDER_DETAIL_SUCCESS,\r\n    GET_ORDER_DETAIL_FAIL\r\n} from './types';\r\n\r\nexport const list_orders = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/order/get-orders`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ORDERS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ORDERS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ORDERS_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const get_order_detail = transactionId => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/order/get-order/${transactionId}`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ORDER_DETAIL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ORDER_DETAIL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ORDER_DETAIL_FAIL\r\n            });\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}