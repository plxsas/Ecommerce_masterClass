{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sale1\\\\Desktop\\\\SHOPTIME\\\\frontend\\\\src\\\\containers\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { get_products, get_filtered_products } from '../actions/products';\nimport { get_categories } from '../actions/categories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = ({\n  categories,\n  get_categories\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    category_id: '0'\n  });\n  const {\n    category_id\n  } = formData;\n  useEffect(() => {\n    get_categories();\n    window.scrollTo(0, 0);\n  }, []);\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    window.scrollTo(0, 0);\n  };\n\n  const showProducts = () => {\n    let results = [];\n    return results;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4\",\n        children: \"Shop Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Check out our amazing selection of products!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Categories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => onChange(e),\n              value: '0',\n              name: \"category_id\",\n              type: \"radio\",\n              className: \"form-check-input\",\n              defaultChecked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), categories && categories !== null && categories !== undefined && categories.map(category => {\n            if (category.sub_categories.length === 0) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => onChange(e),\n                  value: category.id.toString(),\n                  name: \"category_id\",\n                  type: \"radio\",\n                  className: \"form-check-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: category.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 45\n                }, this)]\n              }, category.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this);\n            } else {\n              let result = [];\n              result.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => onChange(e),\n                  value: category.id.toString(),\n                  name: \"category_id\",\n                  type: \"radio\",\n                  className: \"form-check-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: category.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this)]\n              }, category.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this));\n              category.sub_categories.map(sub_category => {\n                result.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check ml-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: e => onChange(e),\n                    value: sub_category.id.toString(),\n                    name: \"category_id\",\n                    type: \"radio\",\n                    className: \"form-check-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    children: sub_category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 49\n                  }, this)]\n                }, sub_category.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this));\n              });\n              return result;\n            }\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success mt-3\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        children: showProducts()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"qysIdC3c9QlwgbjrtowSvbFX1es=\");\n\n_c = Shop;\n\nconst mapStateToProps = state => ({\n  categories: state.categories.categories\n});\n\nexport default connect(mapStateToProps, {\n  get_categories,\n  get_products,\n  get_filtered_products\n})(Shop);\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/containers/Shop.js"],"names":["React","useState","useEffect","connect","get_products","get_filtered_products","get_categories","Shop","categories","formData","setFormData","category_id","window","scrollTo","onChange","e","target","name","value","onSubmit","preventDefault","showProducts","results","undefined","map","category","sub_categories","length","id","toString","result","push","sub_category","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { get_products, get_filtered_products  } from '../actions/products';\r\nimport { get_categories } from '../actions/categories';\r\n\r\nconst Shop = ({\r\n    categories,\r\n    get_categories\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        category_id: '0',\r\n    });\r\n\r\n    const { category_id } = formData;\r\n\r\n    useEffect(() => {\r\n        get_categories();\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    const showProducts = () => {\r\n        let results = [];\r\n\r\n        return results;\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='jumbotron mt-5'>\r\n                <h1 className='display-4'>Shop Page</h1>\r\n                <p className='lead'>\r\n                    Check out our amazing selection of products!\r\n                </p>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-2'>\r\n                    <form className='mb-5'>\r\n                        <h5>Categories:</h5>\r\n\r\n                        <div className='form-check'>\r\n                            <input\r\n                                onChange={e => onChange(e)}\r\n                                value={'0'}\r\n                                name='category_id'\r\n                                type='radio'\r\n                                className='form-check-input'\r\n                                defaultChecked\r\n                            />\r\n                            <label className='form-check-label'>All</label>\r\n                        </div>\r\n                        {\r\n                            categories &&\r\n                            categories !== null &&\r\n                            categories !== undefined &&\r\n                            categories.map(category => {\r\n                                if (category.sub_categories.length === 0) {\r\n                                    return (\r\n                                        <div key={category.id} className='form-check'>\r\n                                            <input\r\n                                                onChange={e => onChange(e)}\r\n                                                value={category.id.toString()}\r\n                                                name='category_id'\r\n                                                type='radio'\r\n                                                className='form-check-input'\r\n                                            />\r\n                                            <label className='form-check-label'>\r\n                                                {category.name}\r\n                                            </label>\r\n                                        </div>\r\n                                    );\r\n                                } else {\r\n                                    let result = [];\r\n\r\n                                    result.push(\r\n                                        <div key={category.id} className='form-check'>\r\n                                            <input\r\n                                                onChange={e => onChange(e)}\r\n                                                value={category.id.toString()}\r\n                                                name='category_id'\r\n                                                type='radio'\r\n                                                className='form-check-input'\r\n                                            />\r\n                                            <label className='form-check-label'>\r\n                                                {category.name}\r\n                                            </label>\r\n                                        </div>\r\n                                    );\r\n\r\n                                    category.sub_categories.map(sub_category => {\r\n                                        result.push(\r\n                                            <div key={sub_category.id} className='form-check ml-2'>\r\n                                                <input\r\n                                                    onChange={e => onChange(e)}\r\n                                                    value={sub_category.id.toString()}\r\n                                                    name='category_id'\r\n                                                    type='radio'\r\n                                                    className='form-check-input'\r\n                                                />\r\n                                                <label className='form-check-label'>\r\n                                                    {sub_category.name}\r\n                                                </label>\r\n                                            </div>\r\n                                        );\r\n                                    });\r\n\r\n                                    return result;\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        <button className='btn btn-success mt-3'>\r\n                            Update\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className='col-10'>\r\n                    {showProducts()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    categories: state.categories.categories\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    get_categories,\r\n    get_products,\r\n    get_filtered_products\r\n})(Shop);"]},"metadata":{},"sourceType":"module"}