{"ast":null,"code":"import axios from 'axios';\nimport { GET_PRODUCTS_SUCCESS, GET_PRODUCTS_FAIL, GET_PRODUCTS_BY_ARRIVAL_SUCCESS, GET_PRODUCTS_BY_ARRIVAL_FAIL, GET_PRODUCTS_BY_SOLD_SUCCESS, GET_PRODUCTS_BY_SOLD_FAIL, GET_PRODUCT_SUCCESS, GET_PRODUCT_FAIL, RELATED_PRODUCTS_SUCCESS, RELATED_PRODUCTS_FAIL, FILTER_PRODUCTS_SUCCESS, FILTER_PRODUCTS_FAIL, SEARCH_PRODUCTS_SUCCESS, SEARCH_PRODUCTS_FAIL } from './types';\nexport const get_products = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_FAIL\n    });\n  }\n};\nexport const get_products_by_arrival = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=date_created&order=desc&limit=3`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_BY_ARRIVAL_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_ARRIVAL_FAIL\n    });\n  }\n};\nexport const get_products_by_sold = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=sold&order=desc&limit=3`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_BY_SOLD_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_BY_SOLD_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_SOLD_FAIL\n    });\n  }\n};\nexport const get_product = productId => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/product/${productId}`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCT_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCT_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCT_FAIL\n    });\n  }\n};\nexport const get_related_products = productId => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/related/${productId}`, config);\n\n    if (res.data.related_products) {\n      dispatch({\n        type: RELATED_PRODUCTS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: RELATED_PRODUCTS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: RELATED_PRODUCTS_FAIL\n    });\n  }\n};\nexport const get_filtered_products = (category_id, price_range, sort_by, order) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    category_id,\n    price_range,\n    sort_by,\n    order\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/products/by/search`, body, config);\n\n    if (res.data.filtered_products) {\n      dispatch({\n        type: FILTER_PRODUCTS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: FILTER_PRODUCTS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: FILTER_PRODUCTS_FAIL\n    });\n  }\n};\nexport const get_search_products = (search, category_id) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    search,\n    category_id\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/products/search`, body, config);\n\n    if (res.data.search_products) {\n      dispatch({\n        type: SEARCH_PRODUCTS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: SEARCH_PRODUCTS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SEARCH_PRODUCTS_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/products.js"],"names":["axios","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCTS_BY_ARRIVAL_SUCCESS","GET_PRODUCTS_BY_ARRIVAL_FAIL","GET_PRODUCTS_BY_SOLD_SUCCESS","GET_PRODUCTS_BY_SOLD_FAIL","GET_PRODUCT_SUCCESS","GET_PRODUCT_FAIL","RELATED_PRODUCTS_SUCCESS","RELATED_PRODUCTS_FAIL","FILTER_PRODUCTS_SUCCESS","FILTER_PRODUCTS_FAIL","SEARCH_PRODUCTS_SUCCESS","SEARCH_PRODUCTS_FAIL","get_products","dispatch","config","headers","res","get","process","env","REACT_APP_API_URL","status","type","payload","data","err","get_products_by_arrival","get_products_by_sold","get_product","productId","get_related_products","related_products","get_filtered_products","category_id","price_range","sort_by","order","body","JSON","stringify","post","filtered_products","get_search_products","search","search_products"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCTS_FAIL,\r\n    GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\r\n    GET_PRODUCTS_BY_ARRIVAL_FAIL,\r\n    GET_PRODUCTS_BY_SOLD_SUCCESS,\r\n    GET_PRODUCTS_BY_SOLD_FAIL,\r\n    GET_PRODUCT_SUCCESS,\r\n    GET_PRODUCT_FAIL,\r\n    RELATED_PRODUCTS_SUCCESS,\r\n    RELATED_PRODUCTS_FAIL,\r\n    FILTER_PRODUCTS_SUCCESS,\r\n    FILTER_PRODUCTS_FAIL,\r\n    SEARCH_PRODUCTS_SUCCESS,\r\n    SEARCH_PRODUCTS_FAIL\r\n} from './types';\r\n\r\nexport const get_products = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_products_by_arrival = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=date_created&order=desc&limit=3`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_ARRIVAL_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_BY_ARRIVAL_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_products_by_sold = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=sold&order=desc&limit=3`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_SOLD_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_SOLD_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_BY_SOLD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_product = (productId) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/product/${productId}`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCT_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCT_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCT_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_related_products = (productId) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/related/${productId}`, config);\r\n\r\n        if (res.data.related_products) {\r\n            dispatch({\r\n                type: RELATED_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: RELATED_PRODUCTS_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RELATED_PRODUCTS_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_filtered_products = (category_id, price_range, sort_by, order) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        category_id,\r\n        price_range,\r\n        sort_by,\r\n        order\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/products/by/search`, body, config);\r\n\r\n        if (res.data.filtered_products) {\r\n            dispatch({\r\n                type: FILTER_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FILTER_PRODUCTS_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: FILTER_PRODUCTS_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_search_products = (search, category_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        search,\r\n        category_id\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/products/search`, body, config);\r\n\r\n        if (res.data.search_products) {\r\n            dispatch({\r\n                type: SEARCH_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SEARCH_PRODUCTS_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SEARCH_PRODUCTS_FAIL\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}