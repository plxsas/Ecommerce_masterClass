{"ast":null,"code":"export const get_products = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_FAIL\n    });\n  }\n};\nexport const get_products_by_arrival = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=date_created&order=desc&limit=3`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_BY_ARRIVAL_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_ARRIVAL_FAIL\n    });\n  }\n};\nexport const get_products_by_sold = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=sold&order=desc&limit=3`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_BY_SOLD_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_BY_SOLD_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_SOLD_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/products.js"],"names":["get_products","dispatch","config","headers","res","axios","get","process","env","REACT_APP_API_URL","status","type","GET_PRODUCTS_SUCCESS","payload","data","GET_PRODUCTS_FAIL","err","get_products_by_arrival","GET_PRODUCTS_BY_ARRIVAL_SUCCESS","GET_PRODUCTS_BY_ARRIVAL_FAIL","get_products_by_sold","GET_PRODUCTS_BY_SOLD_SUCCESS","GET_PRODUCTS_BY_SOLD_FAIL"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AADE,GAAf;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,4BAA3C,EAAwEP,MAAxE,CAAlB;;AAEA,QAAIE,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEC,oBADD;AAELC,QAAAA,OAAO,EAAET,GAAG,CAACU;AAFR,OAAD,CAAR;AAIH,KALD,MAKO;AACHb,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEI;AADD,OAAD,CAAR;AAGH;AACJ,GAbD,CAaE,OAAOC,GAAP,EAAY;AACVf,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEI;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM;AA2BP,OAAO,MAAME,uBAAuB,GAAG,MAAM,MAAMhB,QAAN,IAAkB;AAC3D,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AADE,GAAf;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mEAA3C,EAA+GP,MAA/G,CAAlB;;AAEA,QAAIE,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEO,+BADD;AAELL,QAAAA,OAAO,EAAET,GAAG,CAACU;AAFR,OAAD,CAAR;AAIH,KALD,MAKO;AACHb,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEQ;AADD,OAAD,CAAR;AAGH;AACJ,GAbD,CAaE,OAAOH,GAAP,EAAY;AACVf,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEQ;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM;AA2BP,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAMnB,QAAN,IAAkB;AACxD,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AADE,GAAf;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,2DAA3C,EAAuGP,MAAvG,CAAlB;;AAEA,QAAIE,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEU,4BADD;AAELR,QAAAA,OAAO,EAAET,GAAG,CAACU;AAFR,OAAD,CAAR;AAIH,KALD,MAKO;AACHb,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEW;AADD,OAAD,CAAR;AAGH;AACJ,GAbD,CAaE,OAAON,GAAP,EAAY;AACVf,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEW;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM","sourcesContent":["export const get_products = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_products_by_arrival = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=date_created&order=desc&limit=3`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_ARRIVAL_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_BY_ARRIVAL_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_products_by_sold = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=sold&order=desc&limit=3`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_SOLD_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_SOLD_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_BY_SOLD_FAIL\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}