{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, SET_AUTH_LOADING, REMOVE_AUTH_LOADING, ACTIVATION_SUCCESS, ACTIVATION_FAIL } from './types';\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\n  dispatch({\n    type: SET_AUTH_LOADING\n  });\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    first_name,\n    last_name,\n    email,\n    password,\n    re_password\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n    if (res.data.email) {\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data\n      });\n      dispatch(setAlert('We sent you an email, please activate your account', 'success'));\n    } else {\n      dispatch({\n        type: SIGNUP_FAIL\n      });\n      dispatch(setAlert('Error creating account', 'danger'));\n    }\n\n    dispatch({\n      type: REMOVE_AUTH_LOADING\n    });\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n    dispatch({\n      type: REMOVE_AUTH_LOADING\n    });\n    dispatch(setAlert('Error creating account', 'danger'));\n  }\n};\nexport const activate = (uid, token) => async dispatch => {\n  dispatch({\n    type: SET_AUTH_LOADING\n  });\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    uid,\n    token\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n    if (res.data.uid || res.data.token) {\n      dispatch({\n        type: ACTIVATION_FAIL\n      });\n      dispatch(setAlert('Error activating account', 'danger'));\n    } else {\n      dispatch({\n        type: ACTIVATION_SUCCESS\n      });\n      dispatch(setAlert('Successfully activated your account', 'success'));\n    }\n\n    dispatch({\n      type: REMOVE_AUTH_LOADING\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIVATION_FAIL\n    });\n    dispatch({\n      type: REMOVE_AUTH_LOADING\n    });\n    dispatch(setAlert('Error creating account', 'danger'));\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/auth.js"],"names":["axios","setAlert","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","SET_AUTH_LOADING","REMOVE_AUTH_LOADING","ACTIVATION_SUCCESS","ACTIVATION_FAIL","signup","first_name","last_name","email","password","re_password","dispatch","type","config","headers","body","JSON","stringify","res","post","process","env","REACT_APP_API_URL","data","payload","err","activate","uid","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACIC,cADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,gBALJ,EAMIC,mBANJ,EAOIC,kBAPJ,EAQIC,eARJ,QASO,SATP;AAWA,OAAO,MAAMC,MAAM,GAAG,CAACC,UAAD,EAAaC,SAAb,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,WAAzC,KAAyD,MAAMC,QAAN,IAAkB;AAC7FA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEX;AADD,GAAD,CAAR;AAGA,QAAMY,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBX,IAAAA,UADwB;AAExBC,IAAAA,SAFwB;AAGxBC,IAAAA,KAHwB;AAIxBC,IAAAA,QAJwB;AAKxBC,IAAAA;AALwB,GAAf,CAAb;;AAQA,MAAI;AACA,UAAMQ,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,cAA5C,EAA2DP,IAA3D,EAAiEF,MAAjE,CAAlB;;AAEA,QAAIK,GAAG,CAACK,IAAJ,CAASf,KAAb,EAAoB;AAChBG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEf,cADD;AAEL2B,QAAAA,OAAO,EAAEN,GAAG,CAACK;AAFR,OAAD,CAAR;AAIAZ,MAAAA,QAAQ,CAACf,QAAQ,CAAC,oDAAD,EAAuD,SAAvD,CAAT,CAAR;AACH,KAND,MAMO;AACHe,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEd;AADD,OAAD,CAAR;AAGAa,MAAAA,QAAQ,CAACf,QAAQ,CAAC,wBAAD,EAA2B,QAA3B,CAAT,CAAR;AACH;;AACDe,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAlBD,CAkBE,OAAOuB,GAAP,EAAY;AACVd,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGAa,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGAS,IAAAA,QAAQ,CAACf,QAAQ,CAAC,wBAAD,EAA2B,QAA3B,CAAT,CAAR;AACH;AACJ,CA7CM;AA+CP,OAAO,MAAM8B,QAAQ,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB,MAAMjB,QAAN,IAAkB;AACtDA,EAAAA,QAAQ,CAAE;AACNC,IAAAA,IAAI,EAAEX;AADA,GAAF,CAAR;AAIA,QAAMY,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBU,IAAAA,GADwB;AAExBC,IAAAA;AAFwB,GAAf,CAAb;;AAKA,MAAI;AACA,UAAMV,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,yBAA5C,EAAsEP,IAAtE,EAA4EF,MAA5E,CAAlB;;AAEA,QAAIK,GAAG,CAACK,IAAJ,CAASI,GAAT,IAAgBT,GAAG,CAACK,IAAJ,CAASK,KAA7B,EAAoC;AAChCjB,MAAAA,QAAQ,CAAE;AACNC,QAAAA,IAAI,EAAER;AADA,OAAF,CAAR;AAGAO,MAAAA,QAAQ,CAACf,QAAQ,CAAC,0BAAD,EAA6B,QAA7B,CAAT,CAAR;AACH,KALD,MAKO;AACHe,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAET;AADD,OAAD,CAAR;AAGAQ,MAAAA,QAAQ,CAACf,QAAQ,CAAC,qCAAD,EAAwC,SAAxC,CAAT,CAAR;AACH;;AACDe,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAjBD,CAiBE,OAAOuB,GAAP,EAAY;AACVd,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAGAO,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGAS,IAAAA,QAAQ,CAACf,QAAQ,CAAC,wBAAD,EAA2B,QAA3B,CAAT,CAAR;AACH;AACJ,CA1CM","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    SET_AUTH_LOADING,\r\n    REMOVE_AUTH_LOADING,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n} from './types';\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    dispatch({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        first_name,\r\n        last_name,\r\n        email,\r\n        password,\r\n        re_password,\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        if (res.data.email) {\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch(setAlert('We sent you an email, please activate your account', 'success'));\r\n        } else {\r\n            dispatch({\r\n                type: SIGNUP_FAIL\r\n            });\r\n            dispatch(setAlert('Error creating account', 'danger'));\r\n        }\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n        dispatch(setAlert('Error creating account', 'danger'));\r\n    }\r\n};\r\n\r\nexport const activate = (uid, token) => async dispatch => {\r\n    dispatch ({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        uid,\r\n        token\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config)\r\n\r\n        if (res.data.uid || res.data.token) {\r\n            dispatch ({\r\n                type: ACTIVATION_FAIL\r\n            });\r\n            dispatch(setAlert('Error activating account', 'danger'));\r\n        } else {\r\n            dispatch({\r\n                type: ACTIVATION_SUCCESS\r\n            });\r\n            dispatch(setAlert('Successfully activated your account', 'success'));\r\n        }\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n        dispatch(setAlert('Error creating account', 'danger'));\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}