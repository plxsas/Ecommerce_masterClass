{"ast":null,"code":"import axios from 'axios';\nimport { ADD_ITEM, GET_TOTAL, GET_ITEM_TOTAL, GET_ITEMS, UPDATE_ITEM, REMOVE_ITEM, EMPTY_CART, ADD_ITEM_SUCCESS, ADD_ITEM_FAIL, GET_TOTAL_SUCCESS, GET_TOTAL_FAIL, GET_ITEM_TOTAL_SUCCESS, GET_ITEM_TOTAL_FAIL, GET_ITEMS_SUCCESS, GET_ITEMS_FAIL, UPDATE_ITEM_SUCCESS, UPDATE_ITEM_FAIL, REMOVE_ITEM_SUCCESS, REMOVE_ITEM_FAIL, EMPTY_CART_SUCCESS, EMPTY_CART_FAIL, SYNCH_CART_SUCCESS, SYNCH_CART_FAIL } from './types';\nexport const add_item = product => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n    const product_id = product.id;\n    const body = JSON.stringify({\n      product_id\n    });\n\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\n\n      if (res.status === 201) {\n        dispatch({\n          type: ADD_ITEM_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: ADD_ITEM_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: ADD_ITEM_FAIL\n      });\n    }\n  } else {\n    let cart = [];\n\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n    }\n\n    let shouldAddItem = true;\n    cart.map(item => {\n      if (product.id.toString() === item.product.id.toString()) {\n        shouldAddItem = false;\n      }\n    });\n    const order_item = {\n      product: product,\n      count: 1\n    };\n\n    if (shouldAddItem) {\n      cart.push(order_item);\n    }\n\n    dispatch({\n      type: ADD_ITEM,\n      payload: cart\n    });\n  }\n};\nexport const get_items = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: GET_ITEMS_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_ITEMS_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: GET_ITEMS_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: GET_ITEMS\n    });\n  }\n};\nexport const get_total = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: GET_TOTAL_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_TOTAL_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: GET_TOTAL_FAIL\n      });\n    }\n  } else {\n    let total = 0.0;\n    let compare_total = 0.0;\n    let cart = [];\n\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n      cart.map(item => {\n        total += parseFloat(item.product.price) * parseFloat(item.count);\n        compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\n      });\n    }\n\n    dispatch({\n      type: GET_TOTAL,\n      payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\n    });\n  }\n};\nexport const get_item_total = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: GET_ITEM_TOTAL_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_ITEM_TOTAL_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: GET_ITEM_TOTAL_FAIL\n      });\n    }\n  } else {\n    let total = 0;\n\n    if (localStorage.getItem('cart')) {\n      total = JSON.parse(localStorage.getItem('cart')).length;\n    }\n\n    dispatch({\n      type: GET_ITEM_TOTAL,\n      payload: total\n    });\n  }\n};\nexport const update_item = (item, count) => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n    const product_id = item.product.id;\n    const body = JSON.stringify({\n      product_id,\n      count\n    });\n\n    try {\n      const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\n\n      if (res.status === 200 && !res.data.error) {\n        dispatch({\n          type: UPDATE_ITEM_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: UPDATE_ITEM_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: UPDATE_ITEM_FAIL\n      });\n    }\n  } else {\n    let cart = [];\n\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n      cart.map((cart_item, index) => {\n        if (cart_item.product.id.toString() === item.product.id.toString()) {\n          cart[index].count = parseInt(count);\n        }\n      });\n    }\n\n    dispatch({\n      type: UPDATE_ITEM,\n      payload: cart\n    });\n  }\n};\nexport const remove_item = item => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const product_id = item.product.id;\n    const body = JSON.stringify({\n      product_id\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      },\n      data: body\n    };\n\n    try {\n      const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: REMOVE_ITEM_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: REMOVE_ITEM_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: REMOVE_ITEM_FAIL\n      });\n    }\n  } else {\n    let cart = [];\n    let new_cart = [];\n\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n      cart.map(cart_item => {\n        if (cart_item.product.id.toString() !== item.product.id.toString()) {\n          new_cart.push(cart_item);\n        }\n      });\n    }\n\n    dispatch({\n      type: REMOVE_ITEM,\n      payload: new_cart\n    });\n  }\n};\nexport const empty_cart = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: EMPTY_CART_SUCCESS\n        });\n      } else {\n        dispatch({\n          type: EMPTY_CART_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: EMPTY_CART_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: EMPTY_CART\n    });\n  }\n};\nexport const synch_cart = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`\n    }\n  };\n  let cart_items = [];\n\n  if (localStorage.getItem('cart')) {\n    let cart = JSON.parse(localStorage.getItem('cart'));\n    cart.map(cart_item => {\n      const item = {};\n      item.product_id = cart_item.product.id;\n      item.count = cart_item.count;\n      cart_items.push(item);\n    });\n  }\n\n  const body = JSON.stringify({\n    cart_items\n  });\n\n  try {\n    const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\n\n    if (res.status === 201) {\n      dispatch({\n        type: SYNCH_CART_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: SYNCH_CART_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SYNCH_CART_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/cart.js"],"names":["axios","ADD_ITEM","GET_TOTAL","GET_ITEM_TOTAL","GET_ITEMS","UPDATE_ITEM","REMOVE_ITEM","EMPTY_CART","ADD_ITEM_SUCCESS","ADD_ITEM_FAIL","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","UPDATE_ITEM_SUCCESS","UPDATE_ITEM_FAIL","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","EMPTY_CART_SUCCESS","EMPTY_CART_FAIL","SYNCH_CART_SUCCESS","SYNCH_CART_FAIL","add_item","product","dispatch","localStorage","getItem","config","headers","product_id","id","body","JSON","stringify","res","post","process","env","REACT_APP_API_URL","status","type","payload","data","err","cart","parse","shouldAddItem","map","item","toString","order_item","count","push","get_items","get","get_total","total","compare_total","parseFloat","price","compare_price","toFixed","get_item_total","length","update_item","put","error","cart_item","index","parseInt","remove_item","delete","new_cart","empty_cart","synch_cart","cart_items"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`, \r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}