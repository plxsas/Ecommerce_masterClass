{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { get_item_total } from './cart';\nimport { GET_PAYMENT_TOTAL_SUCCESS, GET_PAYMENT_TOTAL_FAIL, LOAD_BT_TOKEN_SUCCESS, LOAD_BT_TOKEN_FAIL, PAYMENT_SUCCESS, PAYMENT_FAIL, RESET_PAYMENT_INFO, SET_PAYMENT_LOADING, REMOVE_PAYMENT_LOADING } from './types';\nexport const get_payment_total = shipping_id => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/payment/get-payment-total?shipping_id=${shipping_id}`, config);\n\n    if (res.status === 200 && !res.data.error) {\n      dispatch({\n        type: GET_PAYMENT_TOTAL_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PAYMENT_TOTAL_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PAYMENT_TOTAL_FAIL\n    });\n  }\n};\nexport const get_client_token = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/payment/get-token`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: LOAD_BT_TOKEN_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: LOAD_BT_TOKEN_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOAD_BT_TOKEN_FAIL\n    });\n  }\n};\nexport const process_payment = (nonce, shipping_id, full_name, address_line_1, address_line_2, city, state_province_region, postal_zip_code, country_region, telephone_number) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${localStorage.getItem('access')}`\n    }\n  };\n  const body = JSON.stringify({\n    nonce,\n    shipping_id,\n    full_name,\n    address_line_1,\n    address_line_2,\n    city,\n    state_province_region,\n    postal_zip_code,\n    country_region,\n    telephone_number\n  });\n  dispatch({\n    type: SET_PAYMENT_LOADING\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/payment/make-payment`, body, config);\n\n    if (res.status === 200 && res.data.success) {\n      dispatch({\n        type: PAYMENT_SUCCESS\n      });\n      dispatch(setAlert(res.data.success, 'success'));\n    } else {\n      dispatch({\n        type: PAYMENT_FAIL\n      });\n      dispatch(setAlert(res.data.error, 'danger'));\n    }\n  } catch (err) {\n    dispatch({\n      type: PAYMENT_FAIL\n    });\n    dispatch(setAlert('Error processing payment', 'danger'));\n  }\n\n  dispatch({\n    type: REMOVE_PAYMENT_LOADING\n  });\n  window.scrollTo(0, 0);\n};\nexport const reset = () => dispatch => {\n  dispatch({\n    type: RESET_PAYMENT_INFO\n  });\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/payment.js"],"names":["axios","setAlert","get_item_total","GET_PAYMENT_TOTAL_SUCCESS","GET_PAYMENT_TOTAL_FAIL","LOAD_BT_TOKEN_SUCCESS","LOAD_BT_TOKEN_FAIL","PAYMENT_SUCCESS","PAYMENT_FAIL","RESET_PAYMENT_INFO","SET_PAYMENT_LOADING","REMOVE_PAYMENT_LOADING","get_payment_total","shipping_id","dispatch","config","headers","localStorage","getItem","res","get","process","env","REACT_APP_API_URL","status","data","error","type","payload","err","get_client_token","process_payment","nonce","full_name","address_line_1","address_line_2","city","state_province_region","postal_zip_code","country_region","telephone_number","body","JSON","stringify","post","success","window","scrollTo","reset"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { get_item_total } from './cart';\r\nimport {\r\n    GET_PAYMENT_TOTAL_SUCCESS,\r\n    GET_PAYMENT_TOTAL_FAIL,\r\n    LOAD_BT_TOKEN_SUCCESS,\r\n    LOAD_BT_TOKEN_FAIL,\r\n    PAYMENT_SUCCESS,\r\n    PAYMENT_FAIL,\r\n    RESET_PAYMENT_INFO,\r\n    SET_PAYMENT_LOADING,\r\n    REMOVE_PAYMENT_LOADING\r\n} from './types';\r\n\r\n\r\nexport const get_payment_total = (shipping_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/payment/get-payment-total?shipping_id=${shipping_id}`, config);\r\n\r\n        if (res.status === 200 && !res.data.error) {\r\n            dispatch({\r\n                type: GET_PAYMENT_TOTAL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PAYMENT_TOTAL_FAIL,\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_PAYMENT_TOTAL_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_client_token = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/payment/get-token`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: LOAD_BT_TOKEN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOAD_BT_TOKEN_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOAD_BT_TOKEN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const process_payment = (\r\n    nonce,\r\n    shipping_id,\r\n    full_name,\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    postal_zip_code,\r\n    country_region,\r\n    telephone_number\r\n) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`\r\n        }\r\n    };\r\n    const body = JSON.stringify({\r\n        nonce,\r\n        shipping_id,\r\n        full_name,\r\n        address_line_1,\r\n        address_line_2,\r\n        city,\r\n        state_province_region,\r\n        postal_zip_code,\r\n        country_region,\r\n        telephone_number \r\n    });\r\n\r\n    dispatch({\r\n        type: SET_PAYMENT_LOADING\r\n    });\r\n\r\n    try {\r\n        const res=await axios.post(`${process.env.REACT_APP_API_URL}/api/payment/make-payment`, body, config);\r\n        \r\n        if (res.status === 200 && res.data.success) {\r\n            dispatch({\r\n                type: PAYMENT_SUCCESS\r\n            });\r\n            dispatch(setAlert(res.data.success, 'success'));\r\n        } else {\r\n            dispatch({\r\n                type: PAYMENT_FAIL,\r\n            });\r\n            dispatch(setAlert(res.data.error, 'danger'));\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: PAYMENT_FAIL,\r\n        });\r\n        dispatch(setAlert('Error processing payment', 'danger'));\r\n    }\r\n    dispatch({\r\n        type: REMOVE_PAYMENT_LOADING\r\n    });\r\n    window.scrollTo(0, 0);\r\n};\r\n\r\n\r\nexport const reset = () => dispatch => {\r\n    dispatch({\r\n        type: RESET_PAYMENT_INFO\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}