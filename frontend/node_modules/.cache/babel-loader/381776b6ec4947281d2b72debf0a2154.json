{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/sale1/Desktop/SHOPTIME/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/sale1/Desktop/SHOPTIME/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{SIGNUP_SUCCESS,SIGNUP_FAIL,SET_AUTH_LOADING,REMOVE_AUTH_LOADING}from'./types';export var signup=function signup(first_name,last_name,email,password,re_password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:SET_AUTH_LOADING});config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({first_name:first_name,last_name:last_name,email:email,password:password,re_password:re_password});_context.prev=3;_context.next=6;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users\"),body,config);case 6:res=_context.sent;if(res.data.email){dispatch({type:SIGNUP_SUCCESS,payload:res.data});}else{dispatch({type:SIGNUP_FAIL});}dispatch({type:REMOVE_AUTH_LOADING});_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](3);dispatch({type:SIGNUP_FAIL});dispatch({type:REMOVE_AUTH_LOADING});case 15:case\"end\":return _context.stop();}}},_callee,null,[[3,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/auth.js"],"names":["axios","SIGNUP_SUCCESS","SIGNUP_FAIL","SET_AUTH_LOADING","REMOVE_AUTH_LOADING","signup","first_name","last_name","email","password","re_password","dispatch","type","config","headers","body","JSON","stringify","post","process","env","REACT_APP_API_URL","res","data","payload"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,cADJ,CAEIC,WAFJ,CAGIC,gBAHJ,CAIIC,mBAJJ,KAKO,SALP,CAOA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,UAAD,CAAaC,SAAb,CAAwBC,KAAxB,CAA+BC,QAA/B,CAAyCC,WAAzC,iGAAyD,iBAAMC,QAAN,sIAC3EA,QAAQ,CAAC,CACLC,IAAI,CAAET,gBADD,CAAD,CAAR,CAGMU,MAJqE,CAI5D,CACXC,OAAO,CAAE,CACL,eAAgB,kBADX,CADE,CAJ4D,CAUrEC,IAVqE,CAU9DC,IAAI,CAACC,SAAL,CAAe,CACxBX,UAAU,CAAVA,UADwB,CAExBC,SAAS,CAATA,SAFwB,CAGxBC,KAAK,CAALA,KAHwB,CAIxBC,QAAQ,CAARA,QAJwB,CAKxBC,WAAW,CAAXA,WALwB,CAAf,CAV8D,uCAmBrDV,CAAAA,KAAK,CAACkB,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,gBAA0DN,IAA1D,CAAgEF,MAAhE,CAnBqD,QAmBjES,GAnBiE,eAqBvE,GAAIA,GAAG,CAACC,IAAJ,CAASf,KAAb,CAAoB,CAChBG,QAAQ,CAAC,CACLC,IAAI,CAAEX,cADD,CAELuB,OAAO,CAAEF,GAAG,CAACC,IAFR,CAAD,CAAR,CAIH,CALD,IAKO,CACHZ,QAAQ,CAAC,CACLC,IAAI,CAAEV,WADD,CAAD,CAAR,CAGH,CACDS,QAAQ,CAAC,CACLC,IAAI,CAAER,mBADD,CAAD,CAAR,CA/BuE,iFAmCvEO,QAAQ,CAAC,CACLC,IAAI,CAAEV,WADD,CAAD,CAAR,CAGAS,QAAQ,CAAC,CACLC,IAAI,CAAER,mBADD,CAAD,CAAR,CAtCuE,qEAAzD,gEAAf","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    SET_AUTH_LOADING,\r\n    REMOVE_AUTH_LOADING,\r\n} from './types';\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    dispatch({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        first_name,\r\n        last_name,\r\n        email,\r\n        password,\r\n        re_password,\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users`, body, config);\r\n\r\n        if (res.data.email) {\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SIGNUP_FAIL\r\n            });\r\n        }\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}