{"ast":null,"code":"import { ADD_ITEM, GET_TOTAL, GET_ITEM_TOTAL, GET_ITEMS, UPDATE_ITEM, REMOVE_ITEM, EMPTY_CART, ADD_ITEM_SUCCESS, ADD_ITEM_FAIL, GET_TOTAL_SUCCESS, GET_TOTAL_FAIL, GET_ITEM_TOTAL_SUCCESS, GET_ITEM_TOTAL_FAIL, GET_ITEMS_SUCCESS, GET_ITEMS_FAIL, UPDATE_ITEM_SUCCESS, UPDATE_ITEM_FAIL, REMOVE_ITEM_SUCCESS, REMOVE_ITEM_FAIL, EMPTY_CART_SUCCESS, EMPTY_CART_FAIL, SYNCH_CART_SUCCESS, SYNCH_CART_FAIL } from '../actions/types';\nconst initialState = {\n  items: null,\n  amount: 0.00,\n  compare_amount: 0.00,\n  total_items: 0\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_ITEM_SUCCESS:\n      return { ...state,\n        items: payload.cart\n      };\n\n    case ADD_ITEM_FAIL:\n      return { ...state,\n        items: null\n      };\n\n    case ADD_ITEM:\n      localStorage.getItem('cart', JSON.stringify(payload));\n      return { ...state,\n        items: JSON.parse(localStorage.getItem('cart'))\n      };\n\n    case GET_ITEMS_SUCCESS:\n      return { ...state,\n        items: payload.cart\n      };\n\n    case GET_ITEMS_FAIL:\n      return { ...state,\n        items: null\n      };\n\n    case GET_ITEMS:\n      return { ...state,\n        items: JSON.parse(localStorage.getItem('cart'))\n      };\n\n    case GET_TOTAL_SUCCESS:\n      return { ...state,\n        amount: payload.total_cost,\n        compare_amount: payload.total_compare_cost\n      };\n\n    case GET_TOTAL_FAIL:\n      return { ...state,\n        amount: 0.00,\n        compare_amount: 0.00\n      };\n\n    case GET_TOTAL:\n      return { ...state,\n        amount: payload[0],\n        compare_amount: payload[1]\n      };\n  }\n}","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/reducers/cart.js"],"names":["ADD_ITEM","GET_TOTAL","GET_ITEM_TOTAL","GET_ITEMS","UPDATE_ITEM","REMOVE_ITEM","EMPTY_CART","ADD_ITEM_SUCCESS","ADD_ITEM_FAIL","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","UPDATE_ITEM_SUCCESS","UPDATE_ITEM_FAIL","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","EMPTY_CART_SUCCESS","EMPTY_CART_FAIL","SYNCH_CART_SUCCESS","SYNCH_CART_FAIL","initialState","items","amount","compare_amount","total_items","state","action","type","payload","cart","localStorage","getItem","JSON","stringify","parse","total_cost","total_compare_cost"],"mappings":"AAAA,SACIA,QADJ,EAEIC,SAFJ,EAGIC,cAHJ,EAIIC,SAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,UAPJ,EAQIC,gBARJ,EASIC,aATJ,EAUIC,iBAVJ,EAWIC,cAXJ,EAYIC,sBAZJ,EAaIC,mBAbJ,EAcIC,iBAdJ,EAeIC,cAfJ,EAgBIC,mBAhBJ,EAiBIC,gBAjBJ,EAkBIC,mBAlBJ,EAmBIC,gBAnBJ,EAoBIC,kBApBJ,EAqBIC,eArBJ,EAsBIC,kBAtBJ,EAuBIC,eAvBJ,QAwBO,kBAxBP;AA4BA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,cAAc,EAAE,IAHC;AAIjBC,EAAAA,WAAW,EAAE;AAJI,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAOC,IAAP;AACI,SAAKvB,gBAAL;AACI,aAAO,EACH,GAAGqB,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAAO,CAACC;AAFZ,OAAP;;AAIJ,SAAKxB,aAAL;AACI,aAAO,EACH,GAAGoB,KADA;AAEHJ,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAKxB,QAAL;AACIiC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAA7B;AACA,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,KAAK,EAAEW,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AAFJ,OAAP;;AAKJ,SAAKrB,iBAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAAO,CAACC;AAFZ,OAAP;;AAIJ,SAAKlB,cAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHJ,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAKrB,SAAL;AACI,aAAO,EACH,GAAGyB,KADA;AAEHJ,QAAAA,KAAK,EAAEW,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AAFJ,OAAP;;AAIJ,SAAKzB,iBAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHH,QAAAA,MAAM,EAAEM,OAAO,CAACO,UAFb;AAGHZ,QAAAA,cAAc,EAAEK,OAAO,CAACQ;AAHrB,OAAP;;AAKJ,SAAK7B,cAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHH,QAAAA,MAAM,EAAE,IAFL;AAGHC,QAAAA,cAAc,EAAE;AAHb,OAAP;;AAKJ,SAAKzB,SAAL;AACI,aAAO,EACH,GAAG2B,KADA;AAEHH,QAAAA,MAAM,EAAEM,OAAO,CAAC,CAAD,CAFZ;AAGHL,QAAAA,cAAc,EAAEK,OAAO,CAAC,CAAD;AAHpB,OAAP;AA9CR;AAoDH","sourcesContent":["import {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from '../actions/types';\r\n\r\n\r\n\r\nconst initialState = {\r\n    items: null,\r\n    amount: 0.00,\r\n    compare_amount: 0.00,\r\n    total_items: 0\r\n};\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case ADD_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: payload.cart\r\n            };\r\n        case ADD_ITEM_FAIL:\r\n            return {\r\n                ...state,\r\n                items: null\r\n            };\r\n        case ADD_ITEM:\r\n            localStorage.getItem('cart', JSON.stringify(payload));\r\n            return {\r\n                ...state,\r\n                items: JSON.parse(localStorage.getItem('cart'))\r\n            };\r\n\r\n        case GET_ITEMS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: payload.cart\r\n            };\r\n        case GET_ITEMS_FAIL:\r\n            return {\r\n                ...state,\r\n                items: null\r\n            };\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: JSON.parse(localStorage.getItem('cart'))\r\n            };\r\n        case GET_TOTAL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                amount: payload.total_cost,\r\n                compare_amount: payload.total_compare_cost\r\n            };\r\n        case GET_TOTAL_FAIL:\r\n            return {\r\n                ...state,\r\n                amount: 0.00,\r\n                compare_amount: 0.00\r\n            };\r\n        case GET_TOTAL:\r\n            return {\r\n                ...state,\r\n                amount: payload[0],\r\n                compare_amount: payload[1]\r\n            };\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}