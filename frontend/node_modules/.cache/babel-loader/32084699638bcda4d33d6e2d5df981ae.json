{"ast":null,"code":"import axios from 'axios';\nimport { GET_PRODUCTS_SUCCESS, GET_PRODUCTS_FAIL, GET_PRODUCTS_BY_ARRIVAL_SUCCESS, GET_PRODUCTS_BY_ARRIVAL_FAIL, GET_PRODUCTS_BY_SOLD_SUCCESS, GET_PRODUCTS_BY_SOLD_FAIL, GET_PRODUCT_SUCCESS, GET_PRODUCT_FAIL, SEARCH_PRODUCTS_SUCCESS, SEARCH_PRODUCTS_FAIL, RELATED_PRODUCTS_SUCCESS, RELATED_PRODUCTS_FAIL, FILTER_PRODUCTS_SUCCESS, FILTER_PRODUCTS_FAIL } from './types';\nexport const get_products = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_FAIL\n    });\n  }\n};\nexport const get_products_by_arrival = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=date_created&order=desc&limit=3`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_BY_ARRIVAL_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_ARRIVAL_FAIL\n    });\n  }\n};\nexport const get_products_by_sold = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=sold&order=desc&limit=3`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_PRODUCTS_BY_SOLD_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_PRODUCTS_BY_SOLD_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_SOLD_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/actions/products.js"],"names":["axios","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCTS_BY_ARRIVAL_SUCCESS","GET_PRODUCTS_BY_ARRIVAL_FAIL","GET_PRODUCTS_BY_SOLD_SUCCESS","GET_PRODUCTS_BY_SOLD_FAIL","GET_PRODUCT_SUCCESS","GET_PRODUCT_FAIL","SEARCH_PRODUCTS_SUCCESS","SEARCH_PRODUCTS_FAIL","RELATED_PRODUCTS_SUCCESS","RELATED_PRODUCTS_FAIL","FILTER_PRODUCTS_SUCCESS","FILTER_PRODUCTS_FAIL","get_products","dispatch","config","headers","res","get","process","env","REACT_APP_API_URL","status","type","payload","data","err","get_products_by_arrival","get_products_by_sold"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,iBAFJ,EAGIC,+BAHJ,EAIIC,4BAJJ,EAKIC,4BALJ,EAMIC,yBANJ,EAOIC,mBAPJ,EAQIC,gBARJ,EASIC,uBATJ,EAUIC,oBAVJ,EAWIC,wBAXJ,EAYIC,qBAZJ,EAaIC,uBAbJ,EAcIC,oBAdJ,QAeO,SAfP;AAiBA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AADE,GAAf;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,4BAA3C,EAAwEN,MAAxE,CAAlB;;AAEA,QAAIE,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACpBR,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAExB,oBADD;AAELyB,QAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFR,OAAD,CAAR;AAIH,KALD,MAKO;AACHX,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEvB;AADD,OAAD,CAAR;AAGH;AACJ,GAbD,CAaE,OAAO0B,GAAP,EAAY;AACVZ,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEvB;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM;AA2BP,OAAO,MAAM2B,uBAAuB,GAAG,MAAM,MAAMb,QAAN,IAAkB;AAC3D,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AADE,GAAf;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mEAA3C,EAA+GN,MAA/G,CAAlB;;AAEA,QAAIE,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACpBR,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEtB,+BADD;AAELuB,QAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFR,OAAD,CAAR;AAIH,KALD,MAKO;AACHX,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAErB;AADD,OAAD,CAAR;AAGH;AACJ,GAbD,CAaE,OAAOwB,GAAP,EAAY;AACVZ,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAErB;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM;AA2BP,OAAO,MAAM0B,oBAAoB,GAAG,MAAM,MAAMd,QAAN,IAAkB;AACxD,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AADE,GAAf;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,2DAA3C,EAAuGN,MAAvG,CAAlB;;AAEA,QAAIE,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACpBR,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEpB,4BADD;AAELqB,QAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFR,OAAD,CAAR;AAIH,KALD,MAKO;AACHX,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEnB;AADD,OAAD,CAAR;AAGH;AACJ,GAbD,CAaE,OAAOsB,GAAP,EAAY;AACVZ,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEnB;AADD,KAAD,CAAR;AAGH;AACJ,CAzBM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCTS_FAIL,\r\n    GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\r\n    GET_PRODUCTS_BY_ARRIVAL_FAIL,\r\n    GET_PRODUCTS_BY_SOLD_SUCCESS,\r\n    GET_PRODUCTS_BY_SOLD_FAIL,\r\n    GET_PRODUCT_SUCCESS,\r\n    GET_PRODUCT_FAIL,\r\n    SEARCH_PRODUCTS_SUCCESS,\r\n    SEARCH_PRODUCTS_FAIL,\r\n    RELATED_PRODUCTS_SUCCESS,\r\n    RELATED_PRODUCTS_FAIL,\r\n    FILTER_PRODUCTS_SUCCESS,\r\n    FILTER_PRODUCTS_FAIL,\r\n} from './types';\r\n\r\nexport const get_products = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_products_by_arrival = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=date_created&order=desc&limit=3`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_ARRIVAL_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_BY_ARRIVAL_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_products_by_sold = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/get-products?sortBy=sold&order=desc&limit=3`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_SOLD_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PRODUCTS_BY_SOLD_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PRODUCTS_BY_SOLD_FAIL\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}