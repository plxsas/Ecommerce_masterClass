{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sale1\\\\Desktop\\\\SHOPTIME\\\\frontend\\\\src\\\\containers\\\\Google.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { google_authenticate } from '../actions/auth';\nimport queryString from 'query-string';\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Google = ({\n  google_authenticate\n}) => {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  let location = useLocation();\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    if (state && code) {\n      const fetchData = async () => {\n        await google_authenticate(state, code);\n        setRedirect(true);\n      };\n\n      fetchData();\n    }\n  }, [location]);\n  if (redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5 d-flex justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"Oval\",\n      color: \"#424242\",\n      height: 50,\n      width: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Google, \"usdJOiOiTl5Q+gKPkRpTtkR5Tp8=\", false, function () {\n  return [useLocation];\n});\n\n_c = Google;\nexport default connect(null, {\n  google_authenticate\n})(Google);\n\nvar _c;\n\n$RefreshReg$(_c, \"Google\");","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/frontend/src/containers/Google.js"],"names":["React","useState","useEffect","Redirect","useLocation","connect","google_authenticate","queryString","Loader","Google","redirect","setRedirect","location","values","parse","search","state","code","fetchData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AACxC,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,MAAIW,QAAQ,GAAGR,WAAW,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,MAAM,GAAGN,WAAW,CAACO,KAAZ,CAAkBF,QAAQ,CAACG,MAA3B,CAAf;AACA,UAAMC,KAAK,GAAGH,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACG,KAAtB,GAA8B,IAA5C;AACA,UAAMC,IAAI,GAAGJ,MAAM,CAACI,IAAP,GAAcJ,MAAM,CAACI,IAArB,GAA4B,IAAzC;;AAEA,QAAID,KAAK,IAAIC,IAAb,EAAmB;AACf,YAAMC,SAAS,GAAG,YAAY;AAC1B,cAAMZ,mBAAmB,CAACU,KAAD,EAAQC,IAAR,CAAzB;AACAN,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAHD;;AAKAO,MAAAA,SAAS;AACZ;AACJ,GAbQ,EAaN,CAACN,QAAD,CAbM,CAAT;AAeA,MAAIF,QAAJ,EACI,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACJ,sBACI;AAAK,IAAA,SAAS,EAAC,uDAAf;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,MAAM,EAAE,EAHZ;AAII,MAAA,KAAK,EAAE;AAJX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA/BD;;GAAMD,M;UAEaL,W;;;KAFbK,M;AAiCN,eAAeJ,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAAqCG,MAArC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { google_authenticate } from '../actions/auth';\r\nimport queryString from 'query-string';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Google = ({ google_authenticate }) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const values = queryString.parse(location.search);\r\n        const state = values.state ? values.state : null;\r\n        const code = values.code ? values.code : null;\r\n\r\n        if (state && code) {\r\n            const fetchData = async () => {\r\n                await google_authenticate(state, code);\r\n                setRedirect(true);\r\n            };\r\n\r\n            fetchData();\r\n        }\r\n    }, [location]);\r\n\r\n    if (redirect)\r\n        return <Redirect to='/dashboard' />;\r\n    return (\r\n        <div className='mt-5 d-flex justify-content-center align-items-center'>\r\n            <Loader\r\n                type='Oval'\r\n                color='#424242'\r\n                height={50}\r\n                width={50}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {google_authenticate})(Google);"]},"metadata":{},"sourceType":"module"}