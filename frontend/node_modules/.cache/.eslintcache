[{"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\index.js":"1","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\App.js":"2","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Home.js":"3","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Login.js":"4","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Signup.js":"5","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\store.js":"6","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\index.js":"7","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\auth.js":"8","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\types.js":"9","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\auth.js":"10","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Activate.js":"11","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\hocs\\Layout.js":"12","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\Navbar.js":"13","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\alert.js":"14","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\alert.js":"15","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\Alert.js":"16","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Dashboard.js":"17","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ResetPasswordConfirm.js":"18","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ResetPassword.js":"19","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Google.js":"20","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Facebook.js":"21","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\categories.js":"22","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Shop.js":"23","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\categories.js":"24","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\products.js":"25","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\products.js":"26","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\LandingPage.js":"27","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\Card.js":"28","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ProductDetail.js":"29","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\ProductDetailCard.js":"30","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\helpers\\fixedPrices.js":"31","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\ShopForm.js":"32","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Search.js":"33","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\SearchBox.js":"34","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\cart.js":"35","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Cart.js":"36","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\GoToCart.js":"37","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\cart.js":"38","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\CartItem.js":"39","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\shipping.js":"40","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Checkout.js":"41","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\hocs\\PrivateRoute.js":"42","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\shipping.js":"43","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\payment.js":"44","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\NotFound.js":"45","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ThankYou.js":"46","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\payment.js":"47","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\ShippingForm.js":"48","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\helpers\\fixedCountries.js":"49","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\orders.js":"50","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\orders.js":"51"},{"size":199,"mtime":1628166010102,"results":"52","hashOfConfig":"53"},{"size":2613,"mtime":1636369871719,"results":"54","hashOfConfig":"53"},{"size":1538,"mtime":1635328682346,"results":"55","hashOfConfig":"53"},{"size":4020,"mtime":1629460018669,"results":"56","hashOfConfig":"53"},{"size":5569,"mtime":1629460100994,"results":"57","hashOfConfig":"53"},{"size":403,"mtime":1628168550528,"results":"58","hashOfConfig":"53"},{"size":453,"mtime":1636300529408,"results":"59","hashOfConfig":"53"},{"size":3343,"mtime":1636383823529,"results":"60","hashOfConfig":"53"},{"size":4630,"mtime":1636299320950,"results":"61","hashOfConfig":"53"},{"size":14090,"mtime":1636388941707,"results":"62","hashOfConfig":"53"},{"size":1908,"mtime":1628760275020,"results":"63","hashOfConfig":"53"},{"size":1350,"mtime":1635346592260,"results":"64","hashOfConfig":"53"},{"size":6214,"mtime":1636369806309,"results":"65","hashOfConfig":"53"},{"size":537,"mtime":1629282597454,"results":"66","hashOfConfig":"53"},{"size":299,"mtime":1629197281026,"results":"67","hashOfConfig":"53"},{"size":781,"mtime":1629282297223,"results":"68","hashOfConfig":"53"},{"size":1849,"mtime":1636372671774,"results":"69","hashOfConfig":"53"},{"size":3118,"mtime":1629286274088,"results":"70","hashOfConfig":"53"},{"size":2284,"mtime":1629196772889,"results":"71","hashOfConfig":"53"},{"size":1285,"mtime":1629459891546,"results":"72","hashOfConfig":"53"},{"size":1297,"mtime":1629459881346,"results":"73","hashOfConfig":"53"},{"size":600,"mtime":1629544514282,"results":"74","hashOfConfig":"53"},{"size":4860,"mtime":1635333839619,"results":"75","hashOfConfig":"53"},{"size":768,"mtime":1629544565766,"results":"76","hashOfConfig":"53"},{"size":2897,"mtime":1630317880597,"results":"77","hashOfConfig":"53"},{"size":5676,"mtime":1630318486992,"results":"78","hashOfConfig":"53"},{"size":2576,"mtime":1635328871759,"results":"79","hashOfConfig":"53"},{"size":2852,"mtime":1633692959453,"results":"80","hashOfConfig":"53"},{"size":2690,"mtime":1635335638143,"results":"81","hashOfConfig":"53"},{"size":3637,"mtime":1635335610259,"results":"82","hashOfConfig":"53"},{"size":361,"mtime":1630253629672,"results":"83","hashOfConfig":"53"},{"size":5854,"mtime":1630317313731,"results":"84","hashOfConfig":"53"},{"size":1950,"mtime":1635334424750,"results":"85","hashOfConfig":"53"},{"size":2191,"mtime":1630334085444,"results":"86","hashOfConfig":"53"},{"size":4272,"mtime":1633605529624,"results":"87","hashOfConfig":"53"},{"size":5471,"mtime":1635347504792,"results":"88","hashOfConfig":"53"},{"size":811,"mtime":1635510841914,"results":"89","hashOfConfig":"53"},{"size":10802,"mtime":1635329033793,"results":"90","hashOfConfig":"53"},{"size":9196,"mtime":1635347589409,"results":"91","hashOfConfig":"53"},{"size":628,"mtime":1635603581428,"results":"92","hashOfConfig":"53"},{"size":11525,"mtime":1636290026472,"results":"93","hashOfConfig":"53"},{"size":573,"mtime":1635611976924,"results":"94","hashOfConfig":"53"},{"size":815,"mtime":1635603181007,"results":"95","hashOfConfig":"53"},{"size":2352,"mtime":1635946782674,"results":"96","hashOfConfig":"53"},{"size":489,"mtime":1635946610950,"results":"97","hashOfConfig":"53"},{"size":770,"mtime":1635946589112,"results":"98","hashOfConfig":"53"},{"size":3608,"mtime":1635946823411,"results":"99","hashOfConfig":"53"},{"size":4313,"mtime":1636290075802,"results":"100","hashOfConfig":"53"},{"size":11092,"mtime":1636285091070,"results":"101","hashOfConfig":"53"},{"size":937,"mtime":1636302394005,"results":"102","hashOfConfig":"53"},{"size":1916,"mtime":1636302310752,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"afjpn0",{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"106"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\index.js",[],["230","231"],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\App.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Home.js",["232"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    get_products_by_arrival,\r\n    get_products_by_sold\r\n} from '../actions/products';\r\nimport {\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from '../actions/cart';\r\nimport LandingPage from '../components/LandingPage';\r\n\r\nconst Home = ({\r\n    products_arrival,\r\n    products_sold,\r\n    get_products_by_arrival,\r\n    get_products_by_sold,\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        get_products_by_arrival();\r\n        get_products_by_sold();\r\n    }, []);\r\n\r\n    if (redirect)\r\n        return <Redirect to='/cart-or-continue-shopping' />\r\n\r\n    return (\r\n        <LandingPage\r\n            products_arrival={products_arrival}\r\n            products_sold={products_sold}\r\n            add_item={add_item}\r\n            get_items={get_items}\r\n            get_total={get_total}\r\n            get_item_total={get_item_total}\r\n            setRedirect={setRedirect}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    products_arrival: state.products.products_arrival,\r\n    products_sold: state.products.products_sold\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    get_products_by_arrival,\r\n    get_products_by_sold,\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n})(Home);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Login.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Signup.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\store.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\auth.js",["233"],"import {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    REFRESH_SUCCESS,\r\n    REFRESH_FAIL,\r\n    SET_AUTH_LOADING,\r\n    REMOVE_AUTH_LOADING,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null,\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case SET_AUTH_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_AUTH_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                access: null,\r\n                refresh: null\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case GOOGLE_AUTH_SUCCESS:\r\n        case FACEBOOK_AUTH_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: localStorage.getItem('access'),\r\n                refresh: localStorage.getItem('refresh'),\r\n            }\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n        case RESET_PASSWORD_SUCCESS:\r\n        case RESET_PASSWORD_FAIL:\r\n        case RESET_PASSWORD_CONFIRM_SUCCESS:\r\n        case RESET_PASSWORD_CONFIRM_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        case REFRESH_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                access: localStorage.getItem('access')\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n        case SIGNUP_FAIL:\r\n        case LOGIN_FAIL:\r\n        case GOOGLE_AUTH_FAIL:\r\n        case FACEBOOK_AUTH_FAIL:\r\n        case REFRESH_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\types.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\auth.js",["234"],"import axios from 'axios';\r\nimport { combineReducers } from 'redux';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    synch_cart\r\n} from './cart';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    REFRESH_SUCCESS,\r\n    REFRESH_FAIL,\r\n    SET_AUTH_LOADING,\r\n    REMOVE_AUTH_LOADING,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    LOGOUT,\r\n} from './types';\r\n\r\nexport const check_authenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            token: localStorage.getItem('access')\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    dispatch({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        first_name,\r\n        last_name,\r\n        email,\r\n        password,\r\n        re_password,\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch(setAlert('We sent you an email, please activate your account', 'success'));\r\n        } else {\r\n            dispatch({\r\n                type: SIGNUP_FAIL\r\n            });\r\n            dispatch(setAlert('Error creating account', 'danger'));\r\n        }\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n        dispatch(setAlert('Error creating account', 'danger'));\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: USER_LOADED_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: USER_LOADED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    dispatch({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        email,\r\n        password\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch(load_user());\r\n            dispatch({\r\n                type: REMOVE_AUTH_LOADING\r\n            });\r\n            dispatch(setAlert('Logged in successfully', 'success'));\r\n            dispatch(synch_cart());\r\n        } else {\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            });\r\n            dispatch({\r\n                type: REMOVE_AUTH_LOADING\r\n            });\r\n            dispatch(setAlert('Error authenticating', 'danger'));\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n        dispatch(setAlert('Error authenticating', 'danger'));\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const google_authenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        dispatch({\r\n            type: SET_AUTH_LOADING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: GOOGLE_AUTH_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(load_user());\r\n                dispatch({\r\n                    type: REMOVE_AUTH_LOADING\r\n                });\r\n                dispatch(setAlert('Logged in successfully', 'success'));\r\n                dispatch(synch_cart());\r\n            } else {\r\n                dispatch({\r\n                    type: GOOGLE_AUTH_FAIL\r\n                });\r\n                dispatch({\r\n                    type: REMOVE_AUTH_LOADING\r\n                });\r\n                dispatch(setAlert('Error authenticating', 'danger'));\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL\r\n            });\r\n            dispatch({\r\n                type: REMOVE_AUTH_LOADING\r\n            });\r\n            dispatch(setAlert('Error authenticating', 'danger'));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const facebook_authenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        dispatch({\r\n            type: SET_AUTH_LOADING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?${formBody}`, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: FACEBOOK_AUTH_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(load_user());\r\n                dispatch({\r\n                    type: REMOVE_AUTH_LOADING\r\n                });\r\n                dispatch(setAlert('Logged in successfully', 'success'));\r\n                dispatch(synch_cart());\r\n            } else {\r\n                dispatch({\r\n                    type: FACEBOOK_AUTH_FAIL\r\n                });\r\n                dispatch({\r\n                    type: REMOVE_AUTH_LOADING\r\n                });\r\n                dispatch(setAlert('Error authenticating', 'danger'));\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: FACEBOOK_AUTH_FAIL\r\n            });\r\n            dispatch({\r\n                type: REMOVE_AUTH_LOADING\r\n            });\r\n            dispatch(setAlert('Error authenticating', 'danger'));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const activate = (uid, token) => async dispatch => {\r\n    dispatch({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        uid,\r\n        token\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        if (res.status === 204) {\r\n            dispatch({\r\n                type: ACTIVATION_SUCCESS\r\n            });\r\n            dispatch(setAlert('Successfully activated your Account', 'success'));\r\n        } else {\r\n            dispatch({\r\n                type: ACTIVATION_FAIL\r\n            });\r\n            dispatch(setAlert('Error activating account', 'danger'));\r\n        }\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n        dispatch(setAlert('Error creating account', 'danger'));\r\n    }\r\n};\r\n\r\nexport const refresh = () => async dispatch => {\r\n    if (localStorage.getItem('refresh')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            refresh: localStorage.getItem('refresh')\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/refresh/`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REFRESH_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REFRESH_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: REFRESH_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: REFRESH_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    dispatch({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: RESET_PASSWORD_SUCCESS\r\n            });\r\n            dispatch({\r\n                type: REMOVE_AUTH_LOADING\r\n            });\r\n            dispatch(setAlert('Password reset email sent', 'success'));\r\n        } else {\r\n            dispatch({\r\n                type: RESET_PASSWORD_FAIL\r\n            });\r\n            dispatch({\r\n                type: REMOVE_AUTH_LOADING\r\n            });\r\n            dispatch(setAlert('Error sending password reset email', 'danger'));\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n        dispatch(setAlert('Error sending password reset email', 'danger'));\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    dispatch({\r\n        type: SET_AUTH_LOADING\r\n    });\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        uid,\r\n        token,\r\n        new_password,\r\n        re_new_password\r\n    });\r\n\r\n    if (new_password !== re_new_password) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n        dispatch({\r\n            type: REMOVE_AUTH_LOADING\r\n        });\r\n        dispatch(setAlert('Passwords do not match', 'danger'));\r\n    } else {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: RESET_PASSWORD_CONFIRM_SUCCESS\r\n                });\r\n                dispatch({\r\n                    type: REMOVE_AUTH_LOADING\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: RESET_PASSWORD_CONFIRM_FAIL\r\n                });\r\n                dispatch({\r\n                    type: REMOVE_AUTH_LOADING\r\n                });\r\n                dispatch(setAlert('Error resetting your password', 'danger'));\r\n            }\r\n            dispatch(setAlert('Password has been reset successfully', 'success'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: RESET_PASSWORD_CONFIRM_FAIL\r\n            });\r\n            dispatch({\r\n                type: REMOVE_AUTH_LOADING\r\n            });\r\n            dispatch(setAlert('Error resetting your password', 'danger'));\r\n        }\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n    dispatch(setAlert('Logout Out', 'success'));\r\n    dispatch(get_items());\r\n    dispatch(get_item_total());\r\n    dispatch(get_total());\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Activate.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\hocs\\Layout.js",["235"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    check_authenticated, \r\n    load_user, \r\n    refresh \r\n} from '../actions/auth';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from '../actions/cart';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst Layout = ({ \r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    children\r\n}) => {\r\n    const [searchRedirect, setSearchRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        refresh();\r\n        check_authenticated();\r\n        load_user();\r\n        get_items();\r\n        get_total();\r\n        get_item_total();\r\n    }, []);\r\n\r\n    if (searchRedirect) {\r\n        return (\r\n            <div>\r\n                <Navbar\r\n                    setSearchRedirect={setSearchRedirect}\r\n                />\r\n                <Redirect to='/search' />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar\r\n                setSearchRedirect={setSearchRedirect}\r\n            />\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, {\r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n})(Layout);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\Navbar.js",["236","237"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { logout } from '../actions/auth';\r\nimport { get_categories } from '../actions/categories';\r\nimport { get_search_products } from '../actions/products';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Navbar = ({\r\n    isAuthenticated,\r\n    logout,\r\n    categories,\r\n    get_categories,\r\n    get_search_products,\r\n    setSearchRedirect,\r\n    total_items\r\n    \r\n}) => {\r\n    const [render, setRender] = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        category_id: 0,\r\n        search: ''\r\n    });\r\n\r\n    const { category_id, search } = formData;\r\n\r\n    useEffect(() => {\r\n        get_categories();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setSearchRedirect(false);\r\n    }, [render]);\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        get_search_products(search, category_id);\r\n        setSearchRedirect(true);\r\n        setRender(!render);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        logout()\r\n        setRedirect(true);\r\n    };\r\n\r\n    const authLinks = (\r\n        <li className='nav-item'>\r\n            <a \r\n                className='nav-link mt-1'\r\n                onClick={logoutHandler} \r\n                href='#!'\r\n            >\r\n                Logout\r\n            </a>\r\n        </li>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink \r\n                    className='nav-link mt-1' \r\n                    to='/login'\r\n                >\r\n                    Login\r\n                </NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <NavLink \r\n                    className='nav-link mt-1' \r\n                    to='/signup'\r\n                >\r\n                    Sign Up\r\n                </NavLink>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const dashboard = () => {\r\n        return (\r\n            <li className='nav-item'>\r\n                <NavLink\r\n                    className='nav-link mt-1'\r\n                    to='/dashboard'\r\n                >\r\n                    Dashboard\r\n                </NavLink>\r\n            </li>\r\n        );\r\n    };\r\n\r\n    const getNavbar = () => (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <Link className='navbar-brand' to='/'>Shop Time</Link>\r\n            <button \r\n                className='navbar-toggler' \r\n                type='button' \r\n                data-toggle='collapse' \r\n                data-target='#navbarNav' \r\n                aria-controls='navbarNav' \r\n                aria-expanded='false' \r\n                aria-label='Toggle navigation'\r\n            >\r\n                <span className='navbar-toggler-icon'></span>\r\n            </button>\r\n            <div className='collapse navbar-collapse' id='navbarNav'>\r\n                <ul className='navbar-nav'>\r\n                    <li className='nav-item'>\r\n                        <NavLink \r\n                            className='nav-link mt-1' \r\n                            exact\r\n                            to='/'\r\n                        >\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    {isAuthenticated ? dashboard() : <Fragment></Fragment>}\r\n                    <SearchBox \r\n                        search={search}\r\n                        onChange={onChange}\r\n                        onSubmit={onSubmit}\r\n                        categories={categories}\r\n                    />\r\n                    <li className='nav-item'>\r\n                        <NavLink \r\n                            className='nav-link mt-1' \r\n                            to='/shop'\r\n                        >\r\n                            Shop\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <NavLink \r\n                            className='nav-link mt-1' \r\n                            to='/cart'\r\n                        >\r\n                            Cart <sup>\r\n                                    <small\r\n                                        style={{\r\n                                            borderRadius: '50%',\r\n                                            padding: '2px',\r\n                                            fontSize: '12px',\r\n                                            fontStyle: 'italic',\r\n                                            backgroundColor: '#777',\r\n                                            color: '#fff'\r\n                                        }}\r\n                                    >\r\n                                        {total_items}\r\n                                    </small>\r\n                            </sup>\r\n                        </NavLink>\r\n                    </li>\r\n                    {\r\n                        isAuthenticated ? authLinks : guestLinks\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n\r\n    const renderNavbar = () => {\r\n        if (redirect) {\r\n            return (\r\n                <Fragment>\r\n                    {getNavbar()}\r\n                    <Alert />\r\n                    <Redirect to='/' />\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {getNavbar()}\r\n                    <Alert />\r\n                </Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {renderNavbar()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    categories: state.categories.categories,\r\n    total_items: state.cart.total_items\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout,\r\n    get_categories,\r\n    get_search_products\r\n})(Navbar);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\alert.js",["238"],"import {\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    alert: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: payload\r\n            };\r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: null\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\alert.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\Alert.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Dashboard.js",["239"],"import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n} from '../actions/cart';\r\nimport { list_orders } from '../actions/orders';\r\n\r\n\r\nconst Dashboard = ({\r\n    orders,\r\n    list_orders,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    user,\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        list_orders();\r\n        get_items();\r\n        get_total();\r\n        get_item_total();\r\n    }, []);\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className='card mb-5'>\r\n                <h3 className='card-header'>User Information</h3>\r\n                <ul className='list-group'>\r\n                    <li className='list-group-item'>\r\n                        <strong>First Name:</strong>\r\n                        {\r\n                            user &&\r\n                            user !== null &&\r\n                            user !== undefined ?\r\n                            user.first_name : <Fragment></Fragment>\r\n                        }\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderData = () => {\r\n        return (\r\n            <Fragment>\r\n                {userInfo()}\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <div className='row'>\r\n                <div className='col-3'>\r\n\r\n                </div>\r\n                <div className='col-9'>\r\n                    {renderData()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    orders: state.orders.orders,\r\n    user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    list_orders\r\n})(Dashboard);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ResetPasswordConfirm.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ResetPassword.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Google.js",["240"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { google_authenticate } from '../actions/auth';\r\nimport queryString from 'query-string';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Google = ({ google_authenticate }) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const values = queryString.parse(location.search);\r\n        const state = values.state ? values.state : null;\r\n        const code = values.code ? values.code : null;\r\n\r\n        if (state && code) {\r\n            const fetchData = async () => {\r\n                await google_authenticate(state, code);\r\n                setRedirect(true);\r\n            };\r\n\r\n            fetchData();\r\n        }\r\n    }, [location]);\r\n\r\n    if (redirect)\r\n        return <Redirect to='/dashboard' />;\r\n    return (\r\n        <div className='mt-5 d-flex justify-content-center align-items-center'>\r\n            <Loader\r\n                type='Oval'\r\n                color='#424242'\r\n                height={50}\r\n                width={50}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {google_authenticate})(Google);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Facebook.js",["241"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { facebook_authenticate } from '../actions/auth';\r\nimport queryString from 'query-string';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Facebook = ({ facebook_authenticate }) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const values = queryString.parse(location.search);\r\n        const state = values.state ? values.state : null;\r\n        const code = values.code ? values.code : null;\r\n\r\n        if (state && code) {\r\n            const fetchData = async () => {\r\n                await facebook_authenticate(state, code);\r\n                setRedirect(true);\r\n            };\r\n\r\n            fetchData();\r\n        }\r\n    }, [location]);\r\n\r\n    if (redirect)\r\n        return <Redirect to='/dashboard' />;\r\n    return (\r\n        <div className='mt-5 d-flex justify-content-center align-items-center'>\r\n            <Loader\r\n                type='Oval'\r\n                color='#424242'\r\n                height={50}\r\n                width={50}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {facebook_authenticate})(Facebook);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\categories.js",["242"],"import {\r\n    GET_CATEGORIES_SUCCESS,\r\n    GET_CATEGORIES_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    categories: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                categories: payload.categories\r\n            }\r\n        case GET_CATEGORIES_FAIL:\r\n            return {\r\n                ...state,\r\n                categories: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Shop.js",["243"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    get_products, \r\n    get_filtered_products \r\n} from '../actions/products';\r\nimport {\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from '../actions/cart';\r\nimport { get_categories } from '../actions/categories';\r\nimport Card from '../components/Card';\r\nimport ShopForm from '../components/ShopForm';\r\n\r\nconst Shop = ({\r\n    categories,\r\n    get_categories,\r\n    products,\r\n    get_products,\r\n    filtered_products,\r\n    get_filtered_products,\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [filtered, setFiltered] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        category_id: '0',\r\n        price_range: 'Any',\r\n        sortBy: 'date_created',\r\n        order: 'desc'\r\n    });\r\n\r\n    const { \r\n        category_id, \r\n        price_range,\r\n        sortBy,\r\n        order\r\n    } = formData;\r\n\r\n    useEffect(() => {\r\n        get_categories();\r\n        get_products();\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        window.scrollTo(0, 0);\r\n\r\n        get_filtered_products(category_id, price_range, sortBy, order);\r\n        setFiltered(true);\r\n    };\r\n\r\n    const showProducts = () => {\r\n        let results = [];\r\n        let display = [];\r\n\r\n        if (\r\n            filtered_products &&\r\n            filtered_products !== null &&\r\n            filtered_products !== undefined &&\r\n            filtered\r\n        ) {\r\n            filtered_products.map((product, index) => {\r\n                return display.push(\r\n                    <div key={index} className='col-4'>\r\n                        <Card\r\n                            product={product}\r\n                            add_item={add_item}\r\n                            get_items={get_items}\r\n                            get_total={get_total}\r\n                            get_item_total={get_item_total}\r\n                            setRedirect={setRedirect}\r\n                        />\r\n                    </div>\r\n                );\r\n            });\r\n        } else if (\r\n            !filtered && \r\n            products &&\r\n            products !== null && \r\n            products !== undefined\r\n        ) {\r\n            products.map((product, index) => {\r\n                return display.push(\r\n                    <div key={index} className='col-4'>\r\n                        <Card\r\n                            product={product}\r\n                            add_item={add_item}\r\n                            get_items={get_items}\r\n                            get_total={get_total}\r\n                            get_item_total={get_item_total}\r\n                            setRedirect={setRedirect}\r\n                        />\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < display.length; i += 3) {\r\n            results.push(\r\n                <div key={i} className='row'>\r\n                    {display[i] ? display[i] : <div className='col-4'></div>}\r\n                    {display[i+1] ? display[i+1] : <div className='col-4'></div>}\r\n                    {display[i+2] ? display[i+2] : <div className='col-4'></div>}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return results;\r\n    };\r\n\r\n    if (redirect)\r\n        return <Redirect to='/cart-or-continue-shopping' />;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='jumbotron mt-5'>\r\n                <h1 className='display-4'>Shop Page</h1>\r\n                <p className='lead'>\r\n                    Check out our amazing selection of products!\r\n                </p>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-2'>\r\n                    <ShopForm\r\n                        onChange={onChange}\r\n                        onSubmit={onSubmit}\r\n                        categories={categories}\r\n                        sortBy={sortBy}\r\n                        order={order}\r\n                    />\r\n                </div>\r\n                <div className='col-10'>\r\n                    {showProducts()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    categories: state.categories.categories,\r\n    products: state.products.products,\r\n    filtered_products: state.products.filtered_products\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    get_categories,\r\n    get_products,\r\n    get_filtered_products,\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n})(Shop);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\categories.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\products.js",["244"],"import {\r\n    GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCTS_FAIL,\r\n    GET_PRODUCTS_BY_ARRIVAL_SUCCESS,\r\n    GET_PRODUCTS_BY_ARRIVAL_FAIL,\r\n    GET_PRODUCTS_BY_SOLD_SUCCESS,\r\n    GET_PRODUCTS_BY_SOLD_FAIL,\r\n    GET_PRODUCT_SUCCESS,\r\n    GET_PRODUCT_FAIL,\r\n    RELATED_PRODUCTS_SUCCESS,\r\n    RELATED_PRODUCTS_FAIL,\r\n    FILTER_PRODUCTS_SUCCESS,\r\n    FILTER_PRODUCTS_FAIL,\r\n    SEARCH_PRODUCTS_SUCCESS,\r\n    SEARCH_PRODUCTS_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    products: null,\r\n    products_arrival: null,\r\n    products_sold: null,\r\n    product: null,\r\n    search_products: null,\r\n    related_products: null,\r\n    filtered_products: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                products: payload.products\r\n            }\r\n        case GET_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                products: null\r\n            }\r\n        case GET_PRODUCTS_BY_ARRIVAL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                products_arrival: payload.products\r\n            }\r\n        case GET_PRODUCTS_BY_ARRIVAL_FAIL:\r\n            return {\r\n                ...state,\r\n                products_arrival: null\r\n            }\r\n        case GET_PRODUCTS_BY_SOLD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                products_sold: payload.products\r\n            }\r\n        case GET_PRODUCTS_BY_SOLD_FAIL:\r\n            return {\r\n                ...state,\r\n                products_sold: null\r\n            }\r\n        case GET_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                product: payload.product\r\n            }\r\n        case GET_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                product: null\r\n            }\r\n        case RELATED_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                related_products: payload.related_products\r\n            }\r\n        case RELATED_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                related_products: null\r\n            }\r\n        case FILTER_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                filtered_products: payload.filtered_products\r\n            }\r\n        case FILTER_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                filtered_products: null\r\n            }\r\n        case SEARCH_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                search_products: payload.search_products\r\n            }\r\n        case SEARCH_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                search_products: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\products.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\LandingPage.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\Card.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ProductDetail.js",["245"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    get_product, \r\n    get_related_products \r\n} from '../actions/products';\r\nimport {\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from '../actions/cart';\r\nimport Card from '../components/Card';\r\nimport ProductDetailCard from '../components/ProductDetailCard';\r\n\r\nconst ProductDetail = ({ \r\n    match, \r\n    product, \r\n    get_product,\r\n    related_products,\r\n    get_related_products,\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const productId = match.params.id;\r\n\r\n        get_product(productId);\r\n        get_related_products(productId);\r\n    }, [match.params.id]);\r\n\r\n    const getRelatedProducts = () => {\r\n        if (\r\n            related_products &&\r\n            related_products !== null && \r\n            related_products !== undefined &&\r\n            related_products.length !== 0\r\n        ) {\r\n            return related_products.map((product, index) => (\r\n                <div key={index} className='col-4'>\r\n                    <Card\r\n                        product={product}\r\n                        add_item={add_item}\r\n                        get_items={get_items}\r\n                        get_total={get_total}\r\n                        get_item_total={get_item_total}\r\n                        setRedirect={setRedirect}\r\n                    />\r\n                </div>\r\n            ))\r\n        }\r\n    };\r\n\r\n    if (redirect)\r\n        return <Redirect to='/cart-or-continue-shopping' />;\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <ProductDetailCard\r\n                product={product}\r\n                add_item={add_item}\r\n                get_items={get_items}\r\n                get_total={get_total}\r\n                get_item_total={get_item_total}\r\n                setRedirect={setRedirect}\r\n            />\r\n\r\n            <hr />\r\n\r\n            <section className='mt-5'>\r\n                <h2 className='mt-5'>Related Products:</h2>\r\n                <div className='row mt-5 ml-5 mr-5'>\r\n                    {getRelatedProducts()}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    product: state.products.product,\r\n    related_products: state.products.related_products\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    get_product,\r\n    get_related_products,\r\n    add_item,\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n})(ProductDetail);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\ProductDetailCard.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\helpers\\fixedPrices.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\ShopForm.js",["246"],"import React from 'react';\r\nimport { prices } from '../helpers/fixedPrices';\r\n\r\nconst shopForm = ({\r\n    onChange,\r\n    onSubmit,\r\n    categories,\r\n    sortBy,\r\n    order,\r\n}) => (\r\n    <form className='mb-5' onSubmit={e => onSubmit(e)}>\r\n        <h5>Categories:</h5>\r\n\r\n        <div className='form-check'>\r\n            <input\r\n                onChange={e => onChange(e)}\r\n                value={'0'}\r\n                name='category_id'\r\n                type='radio'\r\n                className='form-check-input'\r\n                defaultChecked\r\n            />\r\n            <label className='form-check-label'>All</label>\r\n        </div>\r\n        {\r\n            categories &&\r\n            categories !== null &&\r\n            categories !== undefined &&\r\n            categories.map(category => {\r\n                if (category.sub_categories.length === 0) {\r\n                    return (\r\n                        <div key={category.id} className='form-check'>\r\n                            <input\r\n                                onChange={e => onChange(e)}\r\n                                value={category.id.toString()}\r\n                                name='category_id'\r\n                                type='radio'\r\n                                className='form-check-input'\r\n                            />\r\n                            <label className='form-check-label'>\r\n                                {category.name}\r\n                            </label>\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    let result = [];\r\n\r\n                    result.push(\r\n                        <div key={category.id} className='form-check'>\r\n                            <input\r\n                                onChange={e => onChange(e)}\r\n                                value={category.id.toString()}\r\n                                name='category_id'\r\n                                type='radio'\r\n                                className='form-check-input'\r\n                            />\r\n                            <label className='form-check-label'>\r\n                                {category.name}\r\n                            </label>\r\n                        </div>\r\n                    );\r\n\r\n                    category.sub_categories.map(sub_category => {\r\n                        result.push(\r\n                            <div key={sub_category.id} className='form-check ml-2'>\r\n                                <input\r\n                                    onChange={e => onChange(e)}\r\n                                    value={sub_category.id.toString()}\r\n                                    name='category_id'\r\n                                    type='radio'\r\n                                    className='form-check-input'\r\n                                />\r\n                                <label className='form-check-label'>\r\n                                    {sub_category.name}\r\n                                </label>\r\n                            </div>\r\n                        );\r\n                    });\r\n\r\n                    return result;\r\n                }\r\n            })\r\n        }\r\n\r\n        <h5 className='mt-3'>Price Range</h5>\r\n        {\r\n            prices && prices.map((price, index) => {\r\n                if (price.id === 0) {\r\n                    return (\r\n                        <div key={index} className='form-check'>\r\n                            <input\r\n                                onChange={e => onChange(e)}\r\n                                value={price.name}\r\n                                name='price_range'\r\n                                type='radio'\r\n                                className='form-check-input'\r\n                                defaultChecked\r\n                            />\r\n                            <label className='form-check-label'>{price.name}</label>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div key={index} className='form-check'>\r\n                            <input\r\n                                onChange={e => onChange(e)}\r\n                                value={price.name}\r\n                                name='price_range'\r\n                                type='radio'\r\n                                className='form-check-input'\r\n                                \r\n                            />\r\n                            <label className='form-check-label'>{price.name}</label>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n        <h5 className='mt-3'>Additional Filters:</h5>\r\n        <div className='form-group'>\r\n            <label htmlFor='sortBy'>Sort By</label>\r\n            <select\r\n                className='form-control'\r\n                id='sortBy'\r\n                name='sortBy'\r\n                onChange={e => onChange(e)}\r\n                value={sortBy}\r\n            >\r\n                <option value='date_created'>Date Created</option>\r\n                <option value='price'>Price</option>\r\n                <option value='sold'>Sold</option>\r\n                <option value='name'>Name</option>\r\n            </select>\r\n        </div>\r\n        <div className='form-group'>\r\n            <label htmlFor='order'>Order</label>\r\n            <select\r\n                className='form-control'\r\n                id='order'\r\n                name='order'\r\n                onChange={e => onChange(e)}\r\n                value={order}\r\n            >\r\n                <option value='desc'>Descending</option>\r\n                <option value='asc'>Ascending</option>\r\n            </select>\r\n        </div>\r\n\r\n        <button className='btn btn-success mt-3'>\r\n            Update\r\n        </button>\r\n    </form>\r\n);\r\n\r\nexport default shopForm;","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Search.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\cart.js",["247"],"import {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: null,\r\n    amount: 0.00,\r\n    compare_amount: 0.00,\r\n    total_items: 0\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case ADD_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: payload.cart\r\n            };\r\n        case ADD_ITEM_FAIL:\r\n            return {\r\n                ...state,\r\n                items: null\r\n            };\r\n        case ADD_ITEM:\r\n            localStorage.setItem('cart', JSON.stringify(payload));\r\n            return {\r\n                ...state,\r\n                items: JSON.parse(localStorage.getItem('cart'))\r\n            };\r\n        case GET_ITEMS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: payload.cart\r\n            };\r\n        case GET_ITEMS_FAIL:\r\n            return {\r\n                ...state,\r\n                items: null\r\n            };\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: JSON.parse(localStorage.getItem('cart'))\r\n            };\r\n        case GET_TOTAL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                amount: payload.total_cost,\r\n                compare_amount: payload.total_compare_cost\r\n            };\r\n        case GET_TOTAL_FAIL:\r\n            return {\r\n                ...state,\r\n                amount: 0.00,\r\n                compare_amount: 0.00\r\n            };\r\n        case GET_TOTAL:\r\n            return {\r\n                ...state,\r\n                amount: payload[0],\r\n                compare_amount: payload[1]\r\n            };\r\n        case GET_ITEM_TOTAL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                total_items: payload.total_items\r\n            };\r\n        case GET_ITEM_TOTAL_FAIL:\r\n            return {\r\n                ...state,\r\n                total_items: 0\r\n            };\r\n        case GET_ITEM_TOTAL:\r\n            return {\r\n                ...state,\r\n                total_items: payload\r\n            };\r\n        case UPDATE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: payload.cart\r\n            };\r\n        case UPDATE_ITEM_FAIL:\r\n            return {\r\n                ...state\r\n            };\r\n        case UPDATE_ITEM:\r\n            localStorage.setItem('cart', JSON.stringify(payload));\r\n            return {\r\n                ...state,\r\n                items: JSON.parse(localStorage.getItem('cart'))\r\n            };\r\n        case REMOVE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: payload.cart\r\n            };\r\n        case REMOVE_ITEM_FAIL:\r\n            return {\r\n                ...state\r\n            };\r\n        case REMOVE_ITEM:\r\n            localStorage.setItem('cart', JSON.stringify(payload));\r\n            return {\r\n                ...state,\r\n                items: JSON.parse(localStorage.getItem('cart'))\r\n            };\r\n        case EMPTY_CART_SUCCESS:\r\n        case EMPTY_CART_FAIL:\r\n            return {\r\n                ...state,\r\n                items: null,\r\n                amount: 0.00,\r\n                compare_amount: 0.00,\r\n                total_items: 0\r\n            };\r\n        case EMPTY_CART:\r\n            localStorage.removeItem('cart');\r\n            return {\r\n                items: null,\r\n                amount: 0.00,\r\n                compare_amount: 0.00,\r\n                total_items: 0\r\n            };\r\n        case SYNCH_CART_SUCCESS:\r\n        case SYNCH_CART_FAIL:\r\n            localStorage.removeItem('cart');\r\n            return {\r\n                ...state\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Cart.js",["248"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../actions/alert';\r\nimport {\r\n    remove_item,\r\n    update_item,\r\n    get_items,\r\n    get_item_total,\r\n    get_total\r\n} from '../actions/cart';\r\nimport CartItem from '../components/CartItem';\r\n\r\nconst Cart = ({\r\n    isAuthenticated,\r\n    items,\r\n    amount,\r\n    compare_amount,\r\n    total_items,\r\n    remove_item,\r\n    update_item,\r\n    get_items,\r\n    get_item_total,\r\n    get_total\r\n}) => {\r\n    const [render, setRender] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        get_items();\r\n        get_item_total();\r\n        get_total();\r\n    }, [render]);\r\n\r\n    const showItems = () => {\r\n        return (\r\n            <div>\r\n                <h4 className='text-muted mt-3'>\r\n                    Your cart has {total_items} item(s)\r\n                </h4>\r\n                <hr />\r\n                {\r\n                    items && \r\n                    items !== null && \r\n                    items !== undefined && \r\n                    items.length !== 0 && \r\n                    items.map((item, index) => {\r\n                        let count = item.count;\r\n\r\n                        return (\r\n                            <div key={index}>\r\n                                <CartItem\r\n                                    item={item}\r\n                                    count={count}\r\n                                    update_item={update_item}\r\n                                    remove_item={remove_item}\r\n                                    setAlert={setAlert}\r\n                                    render={render}\r\n                                    setRender={setRender}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const checkoutButton = () => {\r\n        if (total_items < 1) {\r\n            return (\r\n                <Link \r\n                    className='btn btn-warning mt-5'\r\n                    style={{ width: '100%' }}\r\n                    to='/shop'\r\n                >\r\n                    Shop for some Items!\r\n                </Link>\r\n            );\r\n        }\r\n        else if (!isAuthenticated) {\r\n            return (\r\n                <Link \r\n                    className='btn btn-warning mt-5'\r\n                    style={{ width: '100%' }}\r\n                    to='/login'\r\n                >\r\n                    Login to proceed\r\n                </Link>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Link \r\n                    className='btn btn-success mt-5'\r\n                    style={{ width: '100%' }}\r\n                    to='/checkout'\r\n                >\r\n                    Proceed to Checkout\r\n                </Link>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <div className='row'>\r\n                <div className='col-8'>\r\n                    <h2>Your Items:</h2>\r\n                    {showItems()}\r\n                </div>\r\n                <div className='col-4'>\r\n                    <div className='card'>\r\n                        <div className='card-body'>\r\n                            <h2>Your total:</h2>\r\n                            <p style={{ fontSize: '24px' }}>\r\n                                {\r\n                                    compare_amount !== 0 ? (\r\n                                        <span\r\n                                            className='mr-3 text-muted'\r\n                                            style={{\r\n                                                textDecoration: 'line-through'\r\n                                            }}\r\n                                        >\r\n                                            ${compare_amount.toFixed(2)}\r\n                                        </span>\r\n                                    ) : (\r\n                                        <Fragment></Fragment>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    amount !== 0 ? (\r\n                                        <span\r\n                                            style={{\r\n                                                color: '#b12704'\r\n                                            }}\r\n                                        >\r\n                                            ${amount.toFixed(2)}\r\n                                        </span>\r\n                                    ) : (\r\n                                        <Fragment></Fragment>\r\n                                    )\r\n                                }\r\n                                {checkoutButton()}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    items: state.cart.items,\r\n    amount: state.cart.amount,\r\n    compare_amount: state.cart.compare_amount,\r\n    total_items: state.cart.total_items\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    remove_item,\r\n    update_item,\r\n    get_items,\r\n    get_item_total,\r\n    get_total,\r\n    setAlert\r\n})(Cart);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\GoToCart.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\cart.js",["249","250","251","252","253"],"import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`, \r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\CartItem.js",["254"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst CartItem = ({\r\n    item,\r\n    count,\r\n    update_item,\r\n    remove_item,\r\n    setAlert,\r\n    render,\r\n    setRender,\r\n    showViewProduct = true,\r\n    showRemoveProduct = true,\r\n    showUpdateProduct = true,\r\n    showQuantity = false\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        item_count: 1\r\n    });\r\n\r\n    const { item_count } = formData;\r\n\r\n    useEffect(() => {\r\n        if (count)\r\n            setFormData({ ...formData, item_count: count });\r\n    }, [count]);\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                if (item.product.quantity >= item_count) {\r\n                    await update_item(item, item_count);\r\n                }\r\n                else {\r\n                    setAlert('Not enough in stock', 'danger');\r\n                }\r\n                setRender(!render);\r\n            } catch(err) {\r\n\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    };\r\n\r\n    const quantityOrdered = () => {\r\n        if (showQuantity && count) {\r\n            return (\r\n                <p className='mt-3 text-muted'>\r\n                    Quantity Requested: {count}\r\n                </p>\r\n            );\r\n        }\r\n    };\r\n\r\n    const showAdjustQuantityButton = () => {\r\n        if (showUpdateProduct) {\r\n            return (\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='item_count'>Adjust Quantity</label>\r\n                        <select \r\n                            className='form-control' \r\n                            name='item_count' \r\n                            onChange={e => onChange(e)}\r\n                            value={item_count}\r\n                        >\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                            <option>6</option>\r\n                            <option>7</option>\r\n                            <option>8</option>\r\n                            <option>9</option>\r\n                        </select>\r\n                    </div>\r\n                    <button \r\n                        className='btn btn-warning mb-3'\r\n                        type='submit'\r\n                    >\r\n                        Update Quantity\r\n                    </button>\r\n                </form>\r\n            );\r\n        }\r\n    };\r\n\r\n    const showViewProductButton = () => {\r\n        if (showViewProduct) {\r\n            return (\r\n                <Link to={`/product/${\r\n                    item &&\r\n                    item !== null &&\r\n                    item !== undefined &&\r\n                    item.product &&\r\n                    item.product !== null &&\r\n                    item.product !== undefined ? \r\n                    item.product.id : 0\r\n                }`}>\r\n                    <button className='btn btn-outline-primary mt-2 mb-2 mr-2'>\r\n                        View Product\r\n                    </button>\r\n                </Link>\r\n            );\r\n        }\r\n    };\r\n\r\n    const removeItemHandler = async () => {\r\n        await remove_item(item);\r\n        setRender(!render);\r\n    };\r\n\r\n    const showRemoveProductButton = () => {\r\n        if (showRemoveProduct) {\r\n            return (\r\n                <button\r\n                    className='btn btn-outline-danger mt-2 mb-2'\r\n                    onClick={removeItemHandler}\r\n                >\r\n                    Remove Product\r\n                </button>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='card mb-5' style={{ padding: '20px 30px' }}>\r\n            <div className='row'>\r\n                <div className='col-3'>\r\n                    <div style={{ height: '180px', overflow: 'hidden' }}>\r\n                        <img\r\n                            className='card-img-top'\r\n                            alt='Product Visual'\r\n                            src={\r\n                                item &&\r\n                                item !== null &&\r\n                                item !== undefined &&\r\n                                item.product &&\r\n                                item.product !== null &&\r\n                                item.product !== undefined ?\r\n                                item.product.photo : ''\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='col-6'>\r\n                    <h6 className='card-title'>\r\n                        {\r\n                            item &&\r\n                            item !== null &&\r\n                            item !== undefined &&\r\n                            item.product &&\r\n                            item.product !== null &&\r\n                            item.product !== undefined &&\r\n                            item.product.name\r\n                        }\r\n                    </h6>\r\n                    <p className='card-text mt-3'>\r\n                        {\r\n                            item &&\r\n                            item !== null &&\r\n                            item !== undefined &&\r\n                            item.product &&\r\n                            item.product !== null &&\r\n                            item.product !== undefined &&\r\n                            item.product.description.substring(0, 100)\r\n                        }...\r\n                    </p>\r\n                    {quantityOrdered()}\r\n                    {showAdjustQuantityButton()}\r\n                    {showViewProductButton()}\r\n                    {showRemoveProductButton()}\r\n                </div>\r\n                <div className='col-3'>\r\n                    <p className='card-text text-muted'>\r\n                        Price:\r\n                    </p>\r\n                    <p>\r\n                        <span\r\n                            className='mr-2 text-muted'\r\n                            style={{ textDecoration: 'line-through', fontSize: '16px' }}\r\n                        >\r\n                            ${\r\n                                item &&\r\n                                item !== null &&\r\n                                item !== undefined &&\r\n                                item.product &&\r\n                                item.product !== null &&\r\n                                item.product !== undefined &&\r\n                                item.product.compare_price\r\n                            }\r\n                        </span>\r\n                        <span\r\n                            style={{ fontSize: '18px', color: '#b12704' }}\r\n                        >\r\n                            ${\r\n                                item &&\r\n                                item !== null &&\r\n                                item !== undefined &&\r\n                                item.product &&\r\n                                item.product !== null &&\r\n                                item.product !== undefined &&\r\n                                item.product.price\r\n                            }\r\n                        </span>\r\n                    </p>\r\n                    <p className='card-text text-muted mt-5'>\r\n                        {\r\n                            item &&\r\n                            item !== null &&\r\n                            item !== undefined &&\r\n                            item.product &&\r\n                            item.product !== null &&\r\n                            item.product !== undefined &&\r\n                            item.product.quantity > 0 ? (\r\n                                <span className='text-success'>\r\n                                    In Stock\r\n                                </span>\r\n                            ) : (\r\n                                <span className='text-danger'>\r\n                                    Out of Stock\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </p>\r\n                    <p className='card-text text-muted'>\r\n                        Added {\r\n                            moment(\r\n                                item &&\r\n                                item !== null &&\r\n                                item !== undefined &&\r\n                                item.product &&\r\n                                item.product !== null &&\r\n                                item.product !== undefined ? (\r\n                                    item.product.date_created\r\n                                ) : (\r\n                                    ''\r\n                                )\r\n                            ).fromNow()\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\shipping.js",["255"],"import {\r\n    GET_SHIPPING_OPTIONS_SUCCESS,\r\n    GET_SHIPPING_OPTIONS_FAIL\r\n} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    shipping: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_SHIPPING_OPTIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                shipping: payload.shipping_options\r\n            }\r\n        case GET_SHIPPING_OPTIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                shipping: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\Checkout.js",["256","257","258","259"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    refresh\r\n} from '../actions/auth';\r\nimport {\r\n    get_shipping_options\r\n} from '../actions/shipping';\r\nimport {\r\n    get_payment_total,\r\n    get_client_token,\r\n    process_payment\r\n} from '../actions/payment';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport Loader from 'react-loader-spinner';\r\nimport CartItem from '../components/CartItem';\r\nimport ShippingForm from '../components/ShippingForm';\r\nimport { countries } from '../helpers/fixedCountries';\r\n\r\nconst Checkout = ({\r\n    items,\r\n    total_items,\r\n    refresh,\r\n    get_shipping_options,\r\n    shipping,\r\n    get_payment_total,\r\n    get_client_token,\r\n    process_payment,\r\n    isAuthenticated,\r\n    user,\r\n    clientToken,\r\n    made_payment,\r\n    loading,\r\n    original_price,\r\n    total_amount,\r\n    total_compare_amount,\r\n    estimated_tax,\r\n    shipping_cost\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        full_name: '',\r\n        address_line_1: '',\r\n        address_line_2: '',\r\n        city: '',\r\n        state_province_region: '',\r\n        postal_zip_code: '',\r\n        country_region: 'Canada',\r\n        telephone_number: '',\r\n        shipping_id: 0,\r\n    });\r\n\r\n    const [data, setData] = useState({\r\n        instance: {}\r\n    });\r\n\r\n    const { \r\n        full_name,\r\n        address_line_1,\r\n        address_line_2,\r\n        city,\r\n        state_province_region,\r\n        postal_zip_code,\r\n        country_region,\r\n        telephone_number,\r\n        shipping_id,\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const buy = async e => {\r\n        e.preventDefault();\r\n\r\n        let nonce = await data.instance.requestPaymentMethod();\r\n\r\n        process_payment(\r\n            nonce,\r\n            shipping_id,\r\n            full_name,\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            postal_zip_code,\r\n            country_region,\r\n            telephone_number\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        refresh();\r\n        get_shipping_options();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        get_client_token();\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        get_payment_total(shipping_id);\r\n    }, [shipping_id]);\r\n\r\n    const showItems = () => {\r\n        return (\r\n            <div>\r\n                <h4 className='text-muted mt-3'>\r\n                    Your cart has {total_items} item(s)\r\n                </h4>\r\n                <hr />\r\n                {\r\n                    items && \r\n                    items !== null && \r\n                    items !== undefined && \r\n                    items.length !== 0 && \r\n                    items.map((item, index) => {\r\n                        let count = item.count;\r\n\r\n                        return (\r\n                            <div key={index}>\r\n                                <CartItem\r\n                                    item={item}\r\n                                    count={count}\r\n                                    showViewProduct={false}\r\n                                    showRemoveProduct={false}\r\n                                    showUpdateProduct={false}\r\n                                    showQuantity\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderShipping = () => {\r\n        if (shipping && shipping !== null && shipping !== undefined) {\r\n            return (\r\n                <div className='mb-5'>\r\n                    {\r\n                        shipping.map((shipping_option, index) => (\r\n                            <div key={index} className='form-check'>\r\n                                <input\r\n                                    className='form-check-input'\r\n                                    onChange={e => onChange(e)}\r\n                                    value={shipping_option.id}\r\n                                    name='shipping_id'\r\n                                    type='radio'\r\n                                    required\r\n                                />\r\n                                <label className='form-check-label'>\r\n                                    {shipping_option.name} - ${shipping_option.price} ({shipping_option.time_to_delivery})\r\n                                </label>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    const displayTotal = () => {\r\n        let result = [];\r\n\r\n        result.push(\r\n            <Fragment>\r\n                <span className='text-muted mr-3'>Items:</span>\r\n                <span\r\n                    className='mr-3 text-muted'\r\n                    style={{\r\n                        textDecoration: 'line-through'\r\n                    }}\r\n                >\r\n                    ${total_compare_amount}\r\n                </span>\r\n            </Fragment>\r\n        );\r\n\r\n        // COUPONS\r\n\r\n        result.push(\r\n            <Fragment>\r\n                <span\r\n                    style={{\r\n                        color: '#b12704'\r\n                    }}\r\n                >\r\n                    ${original_price}\r\n                </span>\r\n            </Fragment>\r\n        );\r\n\r\n        // Display Shipping & Handling\r\n        if (shipping && shipping_id !== 0) {\r\n            result.push(\r\n                <div className='mt-3'>\r\n                    <span className='text-muted mr-3'>\r\n                        Shipping &amp; Handling:\r\n                    </span>\r\n                    <span style={{ color: '#b12704' }}>\r\n                        ${shipping_cost}\r\n                    </span>\r\n                </div>\r\n            );\r\n        } else {\r\n            result.push(\r\n                <div className='mt-3'>\r\n                    <span className='text-muted mr-3'>\r\n                        Shipping &amp; Handling:\r\n                    </span>\r\n                    <span style={{ color: '#b12704' }}>\r\n                        (Please select shipping option)\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Display Estimated Tax\r\n        result.push(\r\n            <div className='mt-3'>\r\n                <span className='text-muted mr-3'>\r\n                    Estimated HST:\r\n                </span>\r\n                <span style={{ color: '#b12704' }}>\r\n                    ${estimated_tax}\r\n                </span>\r\n            </div>\r\n        );\r\n\r\n        // Display the Total Cost\r\n        result.push(\r\n            <div className='mt-3' style={{ color: '#b12704' }}>\r\n                <span className='text-muted mr-3'>\r\n                    Order Total:\r\n                </span>\r\n                <span>${total_amount}</span>\r\n            </div>\r\n        );\r\n\r\n        return result;\r\n    };\r\n\r\n    const renderPaymentInfo = () => {\r\n        if (!clientToken) {\r\n            if (!isAuthenticated) {\r\n                return (\r\n                    <Link\r\n                        className='btn btn-warning mt-5'\r\n                        style={{ width: '100%' }}\r\n                        to='/login'\r\n                    >\r\n                        Login to Proceed\r\n                    </Link>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div className='mt-5 d-flex justify-content-center align-items-center'>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='#424242'\r\n                            height={50}\r\n                            width={50}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    {\r\n                        loading ? (\r\n                            <div className='d-flex justify-content-center align-items-center'>\r\n                                <Loader\r\n                                    type='Oval'\r\n                                    color='#424242'\r\n                                    height={50}\r\n                                    widht={50}\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <button\r\n                                className='btn btn-success'\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                type='submit'\r\n                            >\r\n                                Place Order\r\n                            </button>\r\n                        )\r\n                    }\r\n                </Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    if (made_payment)\r\n        return <Redirect to='/thankyou' />;\r\n\r\n    return (\r\n        <div className='container mt-5 mb-5'>\r\n            <div className='row'>\r\n                <div className='col-7'>\r\n                    {showItems()}\r\n                </div>\r\n                <div className='col-5'>\r\n                    <h2 className='mb-3'>Order Summary</h2>\r\n                    <div style={{ fontSize: '18px' }}>\r\n                        {displayTotal()}\r\n                    </div>\r\n                    <ShippingForm\r\n                        full_name={full_name}\r\n                        address_line_1={address_line_1}\r\n                        address_line_2={address_line_2}\r\n                        city={city}\r\n                        state_province_region={state_province_region}\r\n                        postal_zip_code={postal_zip_code}\r\n                        country_region={country_region}\r\n                        telephone_number={telephone_number}\r\n                        countries={countries}\r\n                        onChange={onChange}\r\n                        buy={buy}\r\n                        renderShipping={renderShipping}\r\n                        renderPaymentInfo={renderPaymentInfo}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    user: state.auth.user,\r\n    items: state.cart.items,\r\n    total_items: state.cart.total_items,\r\n    shipping: state.shipping.shipping,\r\n    clientToken: state.payment.clientToken,\r\n    made_payment: state.payment.made_payment,\r\n    loading: state.payment.loading,\r\n    original_price: state.payment.original_price,\r\n    total_amount: state.payment.total_amount,\r\n    total_compare_amount: state.payment.total_compare_amount,\r\n    estimated_tax: state.payment.estimated_tax,\r\n    shipping_cost: state.payment.shipping_cost\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    refresh,\r\n    get_shipping_options,\r\n    get_payment_total,\r\n    get_client_token,\r\n    process_payment\r\n})(Checkout);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\hocs\\PrivateRoute.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\shipping.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\payment.js",["260"],"import {\r\n    GET_PAYMENT_TOTAL_SUCCESS,\r\n    GET_PAYMENT_TOTAL_FAIL,\r\n    LOAD_BT_TOKEN_SUCCESS,\r\n    LOAD_BT_TOKEN_FAIL,\r\n    PAYMENT_SUCCESS,\r\n    PAYMENT_FAIL,\r\n    RESET_PAYMENT_INFO,\r\n    SET_PAYMENT_LOADING,\r\n    REMOVE_PAYMENT_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    clientToken: null,\r\n    made_payment: false,\r\n    original_price: 0.0,\r\n    total_amount: 0.0,\r\n    total_compare_amount: 0.0,\r\n    estimated_tax: 0.0,\r\n    shipping_cost: 0.0,\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_PAYMENT_TOTAL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                original_price: payload.original_price,\r\n                total_amount: payload.total_amount,\r\n                total_compare_amount: payload.total_compare_amount,\r\n                estimated_tax: payload.estimated_tax,\r\n                shipping_cost: payload.shipping_cost\r\n            }\r\n        case GET_PAYMENT_TOTAL_FAIL:\r\n            return {\r\n                ...state,\r\n                original_price: 0.00,\r\n                total_amount: 0.00,\r\n                total_compare_amount: 0.00,\r\n                estimated_tax: 0.00,\r\n                shipping_cost: 0.00\r\n            }\r\n        case LOAD_BT_TOKEN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                clientToken: payload.braintree_token\r\n            }\r\n        case LOAD_BT_TOKEN_FAIL:\r\n            return {\r\n                ...state,\r\n                clientToken: null\r\n            }\r\n        case PAYMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                made_payment: true\r\n            }\r\n        case PAYMENT_FAIL:\r\n            return {\r\n                ...state,\r\n                made_payment: false\r\n            }\r\n        case SET_PAYMENT_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_PAYMENT_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case RESET_PAYMENT_INFO:\r\n            return {\r\n                ...state,\r\n                made_payment: false,\r\n                clientToken: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\NotFound.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\containers\\ThankYou.js",["261"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset } from '../actions/payment';\r\n\r\nconst ThankYou = ({ reset }) => {\r\n    useEffect(() => {\r\n        reset();\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container mt-5 d-flex flex-column align-items-center'>\r\n            <h1 className='display-2 mt-5'>Thank You</h1>\r\n            <p className='text-muted'>\r\n                Hope you enjoyed your experience shopping at Shop Time!\r\n            </p>\r\n            <Link to='/' className='btn btn-success mt-5'>\r\n                Back to Site\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset })(ThankYou);","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\payment.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\components\\ShippingForm.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\helpers\\fixedCountries.js",[],"C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\reducers\\orders.js",["262"],"import {\r\n    GET_ORDERS_SUCCESS,\r\n    GET_ORDERS_FAIL,\r\n    GET_ORDER_DETAIL_SUCCESS,\r\n    GET_ORDER_DETAIL_FAIL\r\n} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    orders: null,\r\n    order: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: payload.orders\r\n                \r\n            }\r\n        case GET_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                orders: []   \r\n            }\r\n        case GET_ORDER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                order: payload.order\r\n            }\r\n        case GET_ORDER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                order: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\sale1\\Desktop\\SHOPTIME\\frontend\\src\\actions\\orders.js",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":33,"column":8,"nodeType":"269","endLine":33,"endColumn":10,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":35,"column":1,"nodeType":"273","endLine":118,"endColumn":2},{"ruleId":"274","severity":1,"message":"275","line":2,"column":10,"nodeType":"276","messageId":"277","endLine":2,"endColumn":25},{"ruleId":"267","severity":1,"message":"278","line":34,"column":8,"nodeType":"269","endLine":34,"endColumn":10,"suggestions":"279"},{"ruleId":"267","severity":1,"message":"280","line":32,"column":8,"nodeType":"269","endLine":32,"endColumn":10,"suggestions":"281"},{"ruleId":"267","severity":1,"message":"282","line":36,"column":8,"nodeType":"269","endLine":36,"endColumn":16,"suggestions":"283"},{"ruleId":"271","severity":1,"message":"272","line":10,"column":1,"nodeType":"273","endLine":27,"endColumn":2},{"ruleId":"267","severity":1,"message":"284","line":25,"column":8,"nodeType":"269","endLine":25,"endColumn":10,"suggestions":"285"},{"ruleId":"267","severity":1,"message":"286","line":25,"column":8,"nodeType":"269","endLine":25,"endColumn":18,"suggestions":"287"},{"ruleId":"267","severity":1,"message":"288","line":25,"column":8,"nodeType":"269","endLine":25,"endColumn":18,"suggestions":"289"},{"ruleId":"271","severity":1,"message":"272","line":10,"column":1,"nodeType":"273","endLine":27,"endColumn":2},{"ruleId":"267","severity":1,"message":"290","line":50,"column":8,"nodeType":"269","endLine":50,"endColumn":10,"suggestions":"291"},{"ruleId":"271","severity":1,"message":"272","line":28,"column":1,"nodeType":"273","endLine":105,"endColumn":2},{"ruleId":"267","severity":1,"message":"292","line":36,"column":8,"nodeType":"269","endLine":36,"endColumn":25,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":63,"column":62,"nodeType":"296","messageId":"297","endLine":63,"endColumn":64},{"ruleId":"271","severity":1,"message":"272","line":34,"column":1,"nodeType":"273","endLine":158,"endColumn":2},{"ruleId":"267","severity":1,"message":"298","line":34,"column":8,"nodeType":"269","endLine":34,"endColumn":16,"suggestions":"299"},{"ruleId":"294","severity":1,"message":"295","line":69,"column":23,"nodeType":"296","messageId":"297","endLine":69,"endColumn":25},{"ruleId":"294","severity":1,"message":"295","line":161,"column":27,"nodeType":"296","messageId":"297","endLine":161,"endColumn":29},{"ruleId":"294","severity":1,"message":"295","line":255,"column":41,"nodeType":"296","messageId":"297","endLine":255,"endColumn":43},{"ruleId":"294","severity":1,"message":"295","line":309,"column":32,"nodeType":"296","messageId":"297","endLine":309,"endColumn":34},{"ruleId":"294","severity":1,"message":"295","line":372,"column":28,"nodeType":"296","messageId":"297","endLine":372,"endColumn":30},{"ruleId":"267","severity":1,"message":"300","line":27,"column":8,"nodeType":"269","endLine":27,"endColumn":15,"suggestions":"301"},{"ruleId":"271","severity":1,"message":"272","line":11,"column":1,"nodeType":"273","endLine":28,"endColumn":2},{"ruleId":"274","severity":1,"message":"302","line":53,"column":18,"nodeType":"276","messageId":"277","endLine":53,"endColumn":25},{"ruleId":"267","severity":1,"message":"303","line":95,"column":8,"nodeType":"269","endLine":95,"endColumn":10,"suggestions":"304"},{"ruleId":"267","severity":1,"message":"305","line":99,"column":8,"nodeType":"269","endLine":99,"endColumn":14,"suggestions":"306"},{"ruleId":"267","severity":1,"message":"307","line":103,"column":8,"nodeType":"269","endLine":103,"endColumn":21,"suggestions":"308"},{"ruleId":"271","severity":1,"message":"272","line":24,"column":1,"nodeType":"273","endLine":85,"endColumn":2},{"ruleId":"267","severity":1,"message":"309","line":10,"column":8,"nodeType":"269","endLine":10,"endColumn":10,"suggestions":"310"},{"ruleId":"271","severity":1,"message":"272","line":14,"column":1,"nodeType":"273","endLine":42,"endColumn":2},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'get_products_by_arrival' and 'get_products_by_sold'. Either include them or remove the dependency array. If 'get_products_by_arrival' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["313"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'check_authenticated', 'get_item_total', 'get_items', 'get_total', 'load_user', and 'refresh'. Either include them or remove the dependency array. If 'refresh' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["314"],"React Hook useEffect has a missing dependency: 'get_categories'. Either include it or remove the dependency array. If 'get_categories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["315"],"React Hook useEffect has a missing dependency: 'setSearchRedirect'. Either include it or remove the dependency array. If 'setSearchRedirect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["316"],"React Hook useEffect has missing dependencies: 'get_item_total', 'get_items', 'get_total', and 'list_orders'. Either include them or remove the dependency array. If 'list_orders' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["317"],"React Hook useEffect has a missing dependency: 'google_authenticate'. Either include it or remove the dependency array. If 'google_authenticate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["318"],"React Hook useEffect has a missing dependency: 'facebook_authenticate'. Either include it or remove the dependency array. If 'facebook_authenticate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["319"],"React Hook useEffect has missing dependencies: 'get_categories' and 'get_products'. Either include them or remove the dependency array. If 'get_categories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],"React Hook useEffect has missing dependencies: 'get_product' and 'get_related_products'. Either include them or remove the dependency array. If 'get_product' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'get_item_total', 'get_items', and 'get_total'. Either include them or remove the dependency array. If 'get_items' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["323"],"'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'get_shipping_options' and 'refresh'. Either include them or remove the dependency array. If 'refresh' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["324"],"React Hook useEffect has a missing dependency: 'get_client_token'. Either include it or remove the dependency array. If 'get_client_token' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["325"],"React Hook useEffect has a missing dependency: 'get_payment_total'. Either include it or remove the dependency array. If 'get_payment_total' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["326"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array. If 'reset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["327"],"no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [get_products_by_arrival, get_products_by_sold]",{"range":"358","text":"359"},"Update the dependencies array to be: [check_authenticated, get_item_total, get_items, get_total, load_user, refresh]",{"range":"360","text":"361"},"Update the dependencies array to be: [get_categories]",{"range":"362","text":"363"},"Update the dependencies array to be: [render, setSearchRedirect]",{"range":"364","text":"365"},"Update the dependencies array to be: [get_item_total, get_items, get_total, list_orders]",{"range":"366","text":"367"},"Update the dependencies array to be: [google_authenticate, location]",{"range":"368","text":"369"},"Update the dependencies array to be: [facebook_authenticate, location]",{"range":"370","text":"371"},"Update the dependencies array to be: [get_categories, get_products]",{"range":"372","text":"373"},"Update the dependencies array to be: [get_product, get_related_products, match.params.id]",{"range":"374","text":"375"},"Update the dependencies array to be: [get_item_total, get_items, get_total, render]",{"range":"376","text":"377"},"Update the dependencies array to be: [count, formData]",{"range":"378","text":"379"},"Update the dependencies array to be: [get_shipping_options, refresh]",{"range":"380","text":"381"},"Update the dependencies array to be: [get_client_token, user]",{"range":"382","text":"383"},"Update the dependencies array to be: [get_payment_total, shipping_id]",{"range":"384","text":"385"},"Update the dependencies array to be: [reset]",{"range":"386","text":"387"},[779,781],"[get_products_by_arrival, get_products_by_sold]",[765,767],"[check_authenticated, get_item_total, get_items, get_total, load_user, refresh]",[918,920],"[get_categories]",[991,999],"[render, setSearchRedirect]",[490,492],"[get_item_total, get_items, get_total, list_orders]",[863,873],"[google_authenticate, location]",[871,881],"[facebook_authenticate, location]",[1203,1205],"[get_categories, get_products]",[877,894],"[get_product, get_related_products, match.params.id]",[753,761],"[get_item_total, get_items, get_total, render]",[611,618],"[count, formData]",[2311,2313],"[get_shipping_options, refresh]",[2378,2384],"[get_client_token, user]",[2461,2474],"[get_payment_total, shipping_id]",[287,289],"[reset]"]