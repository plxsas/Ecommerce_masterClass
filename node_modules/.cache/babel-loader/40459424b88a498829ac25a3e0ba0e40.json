{"ast":null,"code":"import axios from 'axios';\nimport { GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, GET_REVIEW_SUCCESS, GET_REVIEW_FAIL, CREATE_REVIEW_SUCCESS, CREATE_REVIEW_FAIL, UPDATE_REVIEW_SUCCESS, UPDATE_REVIEW_FAIL, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, FILTER_REVIEWS_SUCCESS, FILTER_REVIEWS_FAIL } from './types';\nexport const get_reviews = product_id => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/reviews/get-reviews/${product_id}`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: GET_REVIEWS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: GET_REVIEWS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_REVIEWS_FAIL\n    });\n  }\n};\nexport const get_review = product_id => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/reviews/get-review/${product_id}`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: GET_REVIEW_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_REVIEW_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: GET_REVIEW_FAIL\n      });\n    }\n  }\n};\nexport const create_review = (product_id, rating, comment) => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      rating,\n      comment\n    });\n\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/reviews/create-review/${product_id}`, body, config);\n\n      if (res.status === 201) {\n        dispatch({\n          type: CREATE_REVIEW_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: CREATE_REVIEW_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: CREATE_REVIEW_FAIL\n      });\n    }\n  }\n};\nexport const update_review = (product_id, rating, comment) => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      rating,\n      comment\n    });\n\n    try {\n      const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/reviews/update-review/${product_id}`, body, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: UPDATE_REVIEW_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: UPDATE_REVIEW_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: UPDATE_REVIEW_FAIL\n      });\n    }\n  }\n};\nexport const delete_review = product_id => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      },\n      data: {}\n    };\n\n    try {\n      const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/reviews/delete-review/${product_id}`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: DELETE_REVIEW_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          tye: DELETE_REVIEW_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        tye: DELETE_REVIEW_FAIL\n      });\n    }\n  }\n};\nexport const filter_reviews = (product_id, rating) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json'\n    }\n  };\n  let myRating;\n  if (rating === 0.5) myRating = '0.5';else if (rating === 1 || rating === 1.0) myRating = '1.0';else if (rating === 1.5) myRating = '1.5';else if (rating === 2 || rating === 2.0) myRating = '2.0';else if (rating === 2.5) myRating = '2.5';else if (rating === 3 || rating === 3.0) myRating = '3.0';else if (rating === 3.5) myRating = '3.5';else if (rating === 4 || rating === 4.0) myRating = '4.0';else if (rating === 4.5) myRating = '4.5';else myRating = '5.0';\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/reviews/filter-reviews/${product_id}?rating=${myRating}`, config);\n\n    if (res.status === 200) {\n      dispatch({\n        type: FILTER_REVIEWS_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: FILTER_REVIEWS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: FILTER_REVIEWS_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/src/actions/reviews.js"],"names":["axios","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","GET_REVIEW_SUCCESS","GET_REVIEW_FAIL","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","UPDATE_REVIEW_SUCCESS","UPDATE_REVIEW_FAIL","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","FILTER_REVIEWS_SUCCESS","FILTER_REVIEWS_FAIL","get_reviews","product_id","dispatch","config","headers","res","get","process","env","REACT_APP_API_URL","status","type","payload","data","err","get_review","localStorage","getItem","create_review","rating","comment","body","JSON","stringify","post","update_review","put","delete_review","delete","tye","filter_reviews","myRating"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    GET_REVIEW_SUCCESS,\r\n    GET_REVIEW_FAIL,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    UPDATE_REVIEW_SUCCESS,\r\n    UPDATE_REVIEW_FAIL,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    FILTER_REVIEWS_SUCCESS,\r\n    FILTER_REVIEWS_FAIL,\r\n} from './types';\r\n\r\nexport const get_reviews = product_id => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(\r\n            `${process.env.REACT_APP_API_URL}/api/reviews/get-reviews/${product_id}`, \r\n            config\r\n        );\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_REVIEWS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_REVIEWS_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const get_review = product_id => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json',\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/reviews/get-review/${product_id}`, \r\n                config\r\n            );\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_REVIEW_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_REVIEW_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_REVIEW_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const create_review = (product_id, rating, comment) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            rating,\r\n            comment\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(\r\n                `${process.env.REACT_APP_API_URL}/api/reviews/create-review/${product_id}`,\r\n                body,\r\n                config\r\n            );\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: CREATE_REVIEW_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: CREATE_REVIEW_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: CREATE_REVIEW_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const update_review = (product_id, rating, comment) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            rating,\r\n            comment\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(\r\n                `${process.env.REACT_APP_API_URL}/api/reviews/update-review/${product_id}`,\r\n                body,\r\n                config\r\n            );\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_REVIEW_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_REVIEW_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_REVIEW_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const delete_review = product_id => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json',\r\n            },\r\n            data: {}\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(\r\n                `${process.env.REACT_APP_API_URL}/api/reviews/delete-review/${product_id}`,\r\n                config\r\n            );\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: DELETE_REVIEW_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    tye: DELETE_REVIEW_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                tye: DELETE_REVIEW_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const filter_reviews = (product_id, rating) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n        }\r\n    };\r\n\r\n    let myRating;\r\n\r\n    if (rating === 0.5)\r\n        myRating = '0.5';\r\n    else if (rating === 1 || rating === 1.0)\r\n        myRating = '1.0';\r\n    else if (rating === 1.5)\r\n        myRating = '1.5';\r\n    else if (rating === 2 || rating === 2.0)\r\n        myRating = '2.0';\r\n    else if (rating === 2.5)\r\n        myRating = '2.5';\r\n    else if (rating === 3 || rating === 3.0)\r\n        myRating = '3.0';\r\n    else if (rating === 3.5)\r\n        myRating = '3.5';\r\n    else if (rating === 4 || rating === 4.0)\r\n        myRating = '4.0';\r\n    else if (rating === 4.5)\r\n        myRating = '4.5';\r\n    else\r\n        myRating = '5.0';\r\n\r\n    try {\r\n        const res = await axios.get(\r\n            `${process.env.REACT_APP_API_URL}/api/reviews/filter-reviews/${product_id}?rating=${myRating}`,\r\n            config\r\n        );\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: FILTER_REVIEWS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FILTER_REVIEWS_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: FILTER_REVIEWS_FAIL\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}