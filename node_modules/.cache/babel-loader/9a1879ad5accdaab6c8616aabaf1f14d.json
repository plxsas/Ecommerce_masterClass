{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sale1\\\\Desktop\\\\SHOPTIME\\\\src\\\\containers\\\\ResetPasswordConfirm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordConfirm = ({\n  match,\n  loading,\n  reset_password_confirm\n}) => {\n  _s();\n\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    new_password: '',\n    re_new_password: ''\n  });\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n  const {\n    new_password,\n    re_new_password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const uid = match.params.uid;\n    const token = match.params.token;\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    if (new_password === re_new_password) setRequestSent(true);\n  };\n\n  if (requestSent && !loading) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Helmet application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Shop Time | Reset Password Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-5\",\n      children: \"Reset your password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"New Password*\",\n          name: \"new_password\",\n          value: new_password,\n          onChange: e => onChange(e),\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"Confirm New Password*\",\n          name: \"re_new_password\",\n          value: re_new_password,\n          onChange: e => onChange(e),\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 d-flex justify-content-center align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Oval\",\n          color: \"#424242\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPasswordConfirm, \"GjlKO4zM79NIjvPryfPdSOqwx8c=\");\n\n_c = ResetPasswordConfirm;\n\nconst mapStateToProps = state => ({\n  loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, {\n  reset_password_confirm\n})(ResetPasswordConfirm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordConfirm\");","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/src/containers/ResetPasswordConfirm.js"],"names":["React","useState","useEffect","Helmet","Redirect","connect","reset_password_confirm","Loader","ResetPasswordConfirm","match","loading","requestSent","setRequestSent","formData","setFormData","new_password","re_new_password","window","scrollTo","onChange","e","target","name","value","onSubmit","preventDefault","uid","params","token","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst ResetPasswordConfirm = ({ match, loading, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        if (new_password === re_new_password)\r\n            setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent && !loading)\r\n        return <Redirect to='/' />;\r\n    return (\r\n        <div className='container mt-5'>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Helmet application\" />\r\n                <title>Shop Time | Reset Password Confirm</title>\r\n                {/*<link rel=\"canonical\" href=\"http://mysite.com/example\" />*/}\r\n            </Helmet>\r\n            <h1 className='mb-5'>Reset your password:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password*'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password*'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                {\r\n                    loading ? (\r\n                        <div className='mt-3 d-flex justify-content-center align-items-center'>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='#424242'\r\n                                height={50}\r\n                                width={50}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <button className='btn btn-primary' type='submit'>\r\n                            Reset Password\r\n                        </button>\r\n                    )\r\n                }\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.auth.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { reset_password_confirm })(ResetPasswordConfirm);"]},"metadata":{},"sourceType":"module"}