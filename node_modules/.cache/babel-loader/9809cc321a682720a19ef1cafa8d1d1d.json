{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_USER_PROFILE_SUCCESS, GET_USER_PROFILE_FAIL, UPDATE_USER_PROFILE_SUCCESS, UPDATE_USER_PROFILE_FAIL } from './types';\nexport const get_user_profile = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: GET_USER_PROFILE_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_USER_PROFILE_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: GET_USER_PROFILE_FAIL\n      });\n    }\n  }\n};\nexport const update_user_profile = (address_line_1, address_line_2, city, state_province_region, zipcode, phone, country_region) => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`\n      }\n    };\n    const body = JSON.stringify({\n      address_line_1,\n      address_line_2,\n      city,\n      state_province_region,\n      zipcode,\n      phone,\n      country_region\n    });\n\n    try {\n      const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: UPDATE_USER_PROFILE_SUCCESS,\n          payload: res.data\n        });\n        dispatch(setAlert('Profile updated successfully', 'success'));\n      } else {\n        dispatch({\n          type: UPDATE_USER_PROFILE_FAIL\n        });\n        dispatch(setAlert('Failed to update profile', 'danger'));\n      }\n    } catch (err) {\n      dispatch({\n        type: UPDATE_USER_PROFILE_FAIL\n      });\n      dispatch(setAlert('Failed to update profile', 'danger'));\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/sale1/Desktop/SHOPTIME/src/actions/profile.js"],"names":["axios","setAlert","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","get_user_profile","dispatch","localStorage","getItem","config","headers","res","get","process","env","REACT_APP_API_URL","status","type","payload","data","err","update_user_profile","address_line_1","address_line_2","city","state_province_region","zipcode","phone","country_region","body","JSON","stringify","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_USER_PROFILE_SUCCESS,\r\n    GET_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const get_user_profile = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const update_user_profile = (\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    zipcode,\r\n    phone,\r\n    country_region\r\n) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            zipcode,\r\n            phone,\r\n            country_region\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(setAlert('Profile updated successfully', 'success'));\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_FAIL\r\n                });\r\n                dispatch(setAlert('Failed to update profile', 'danger'));\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n            dispatch(setAlert('Failed to update profile', 'danger'));\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}